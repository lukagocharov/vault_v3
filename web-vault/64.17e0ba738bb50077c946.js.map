{"version":3,"file":"64.17e0ba738bb50077c946.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/../../libs/common/src/admin-console/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/auth/settings/two-factor/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings.module.ts"],"sourcesContent":["// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<app-header></app-header>\n<bit-container>\n  <div *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin tw-text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <form *ngIf=\"org && !loading\" [bitSubmit]=\"submit\" [formGroup]=\"formGroup\">\n    <div class=\"tw-grid tw-grid-cols-2 tw-gap-5\">\n      <div>\n        <bit-form-field>\n          <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n          <input bitInput id=\"orgName\" type=\"text\" formControlName=\"orgName\" />\n        </bit-form-field>\n        <bit-form-field>\n          <bit-label>{{ \"email\" | i18n }}</bit-label>\n          <input bitInput id=\"billingEmail\" formControlName=\"billingEmail\" type=\"email\" />\n        </bit-form-field>\n      </div>\n      <div>\n        <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n        <app-account-fingerprint\n          [fingerprintMaterial]=\"organizationId\"\n          [publicKeyBuffer]=\"publicKeyBuffer\"\n          fingerprintLabel=\"{{ 'yourOrganizationsFingerprint' | i18n }}\"\n        >\n        </app-account-fingerprint>\n      </div>\n    </div>\n    <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\">\n      {{ \"save\" | i18n }}\n    </button>\n  </form>\n  <ng-container *ngIf=\"canUseApi\">\n    <h1 bitTypography=\"h1\" class=\"tw-mt-16 tw-pb-2.5\">{{ \"apiKey\" | i18n }}</h1>\n    <p bitTypography=\"body1\">\n      {{ \"apiKeyDesc\" | i18n }}\n      <a bitLink href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noreferrer\">\n        {{ \"learnMoreAboutApi\" | i18n }}\n      </a>\n    </p>\n    <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"viewApiKey()\">\n      {{ \"viewApiKey\" | i18n }}\n    </button>\n    <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"rotateApiKey()\">\n      {{ \"rotateApiKey\" | i18n }}\n    </button>\n  </ng-container>\n  <form\n    *ngIf=\"org && !loading\"\n    [bitSubmit]=\"submitCollectionManagement\"\n    [formGroup]=\"collectionManagementFormGroup\"\n  >\n    <h1 bitTypography=\"h1\" class=\"tw-mt-16 tw-pb-2.5\">{{ \"collectionManagement\" | i18n }}</h1>\n    <p bitTypography=\"body1\">{{ \"collectionManagementDesc\" | i18n }}</p>\n    <bit-form-control>\n      <bit-label>{{ \"allowAdminAccessToAllCollectionItemsDesc\" | i18n }}</bit-label>\n      <input type=\"checkbox\" bitCheckbox formControlName=\"allowAdminAccessToAllCollectionItems\" />\n    </bit-form-control>\n    <bit-form-control>\n      <bit-label>{{ \"limitCollectionCreationDesc\" | i18n }}</bit-label>\n      <input type=\"checkbox\" bitCheckbox formControlName=\"limitCollectionCreation\" />\n    </bit-form-control>\n    <bit-form-control>\n      <bit-label>{{ \"limitCollectionDeletionDesc\" | i18n }}</bit-label>\n      <input type=\"checkbox\" bitCheckbox formControlName=\"limitCollectionDeletion\" />\n    </bit-form-control>\n    <button\n      type=\"submit\"\n      bitButton\n      bitFormButton\n      buttonType=\"primary\"\n      id=\"collectionManagementSubmitButton\"\n    >\n      {{ \"save\" | i18n }}\n    </button>\n  </form>\n\n  <app-danger-zone>\n    <button type=\"button\" bitButton buttonType=\"danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" bitButton buttonType=\"danger\" [bitAction]=\"purgeVault\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </app-danger-zone>\n\n  <ng-template #apiKeyTemplate></ng-template>\n  <ng-template #rotateApiKeyTemplate></ng-template>\n</bit-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { combineLatest, from, lastValueFrom, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationCollectionManagementUpdateRequest } from \"@bitwarden/common/admin-console/models/request/organization-collection-management-update.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/admin-console/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/admin-console/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/admin-console/models/response/organization.response\";\nimport { ConfigService } from \"@bitwarden/common/platform/abstractions/config/config.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { Utils } from \"@bitwarden/common/platform/misc/utils\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\nimport { KeyService } from \"@bitwarden/key-management\";\n\nimport { ApiKeyComponent } from \"../../../auth/settings/security/api-key.component\";\nimport { PurgeVaultComponent } from \"../../../vault/settings/purge-vault.component\";\n\nimport { DeleteOrganizationDialogResult, openDeleteOrganizationDialog } from \"./components\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canEditSubscription = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  taxFormPromise: Promise<unknown>;\n\n  // FormGroup validators taken from server Organization domain object\n  protected formGroup = this.formBuilder.group({\n    orgName: this.formBuilder.control(\n      { value: \"\", disabled: true },\n      {\n        validators: [Validators.required, Validators.maxLength(50)],\n        updateOn: \"change\",\n      },\n    ),\n    billingEmail: this.formBuilder.control(\n      { value: \"\", disabled: true },\n      { validators: [Validators.required, Validators.email, Validators.maxLength(256)] },\n    ),\n  });\n\n  protected collectionManagementFormGroup = this.formBuilder.group({\n    limitCollectionCreation: this.formBuilder.control({ value: false, disabled: false }),\n    limitCollectionDeletion: this.formBuilder.control({ value: false, disabled: false }),\n    allowAdminAccessToAllCollectionItems: this.formBuilder.control({\n      value: false,\n      disabled: false,\n    }),\n  });\n\n  protected organizationId: string;\n  protected publicKeyBuffer: Uint8Array;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private keyService: KeyService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private dialogService: DialogService,\n    private formBuilder: FormBuilder,\n    private toastService: ToastService,\n    private configService: ConfigService,\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = false; // set to false so we can rename organizations\n\n    this.route.params\n      .pipe(\n        switchMap((params) => this.organizationService.get$(params.organizationId)),\n        switchMap((organization) => {\n          return combineLatest([\n            of(organization),\n            // OrganizationResponse for form population\n            from(this.organizationApiService.get(organization.id)),\n            // Organization Public Key\n            from(this.organizationApiService.getKeys(organization.id)),\n          ]);\n        }),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(([organization, orgResponse, orgKeys]) => {\n        // Set domain level organization variables\n        this.organizationId = organization.id;\n        this.canEditSubscription = organization.canEditSubscription;\n        this.canUseApi = organization.useApi;\n\n        // Update disabled states - reactive forms prefers not using disabled attribute\n        if (!this.selfHosted) {\n          this.formGroup.get(\"orgName\").enable();\n          if (this.canEditSubscription) {\n            this.formGroup.get(\"billingEmail\").enable();\n          }\n        }\n\n        // Org Response\n        this.org = orgResponse;\n\n        // Public Key Buffer for Org Fingerprint Generation\n        this.publicKeyBuffer = Utils.fromB64ToArray(orgKeys?.publicKey);\n\n        // Patch existing values\n        this.formGroup.patchValue({\n          orgName: this.org.name,\n          billingEmail: this.org.billingEmail,\n        });\n        this.collectionManagementFormGroup.patchValue({\n          limitCollectionCreation: this.org.limitCollectionCreation,\n          limitCollectionDeletion: this.org.limitCollectionDeletion,\n          allowAdminAccessToAllCollectionItems: this.org.allowAdminAccessToAllCollectionItems,\n        });\n\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy(): void {\n    // You must first call .next() in order for the notifier to properly close subscriptions using takeUntil\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  submit = async () => {\n    this.formGroup.markAllAsTouched();\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const request = new OrganizationUpdateRequest();\n\n    /*\n     * When you disable a FormControl, it is removed from formGroup.values, so we have to use\n     * the original value.\n     * */\n    request.name = this.formGroup.get(\"orgName\").disabled\n      ? this.org.name\n      : this.formGroup.value.orgName;\n    request.billingEmail = this.formGroup.get(\"billingEmail\").disabled\n      ? this.org.billingEmail\n      : this.formGroup.value.billingEmail;\n\n    // Backfill pub/priv key if necessary\n    if (!this.org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.keyService.getOrgKey(this.organizationId);\n      const orgKeys = await this.keyService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    await this.organizationApiService.save(this.organizationId, request);\n\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"organizationUpdated\"),\n    });\n  };\n\n  submitCollectionManagement = async () => {\n    return; // flexible collections are not supported by Vaultwarden\n    const request = new OrganizationCollectionManagementUpdateRequest();\n    request.limitCollectionCreation =\n      this.collectionManagementFormGroup.value.limitCollectionCreation;\n    request.limitCollectionDeletion =\n      this.collectionManagementFormGroup.value.limitCollectionDeletion;\n    request.allowAdminAccessToAllCollectionItems =\n      this.collectionManagementFormGroup.value.allowAdminAccessToAllCollectionItems;\n\n    await this.organizationApiService.updateCollectionManagement(this.organizationId, request);\n\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"updatedCollectionManagement\"),\n    });\n  };\n\n  async deleteOrganization() {\n    const dialog = openDeleteOrganizationDialog(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n        requestType: \"RegularDelete\",\n      },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n\n    if (result === DeleteOrganizationDialogResult.Deleted) {\n      // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.router.navigate([\"/\"]);\n    }\n  }\n\n  purgeVault = async () => {\n    const dialogRef = PurgeVaultComponent.open(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n      },\n    });\n    await lastValueFrom(dialogRef.closed);\n  };\n\n  async viewApiKey() {\n    await ApiKeyComponent.open(this.dialogService, {\n      data: {\n        keyType: \"organization\",\n        entityId: this.organizationId,\n        postKey: this.organizationApiService.getOrCreateApiKey.bind(this.organizationApiService),\n        scope: \"api.organization\",\n        grantType: \"client_credentials\",\n        apiKeyTitle: \"apiKey\",\n        apiKeyWarning: \"apiKeyWarning\",\n        apiKeyDescription: \"apiKeyDesc\",\n      },\n    });\n  }\n\n  async rotateApiKey() {\n    await ApiKeyComponent.open(this.dialogService, {\n      data: {\n        keyType: \"organization\",\n        isRotation: true,\n        entityId: this.organizationId,\n        postKey: this.organizationApiService.rotateApiKey.bind(this.organizationApiService),\n        scope: \"api.organization\",\n        grantType: \"client_credentials\",\n        apiKeyTitle: \"apiKey\",\n        apiKeyWarning: \"apiKeyWarning\",\n        apiKeyDescription: \"apiKeyRotateDesc\",\n      },\n    });\n  }\n}\n","<app-header *ngIf=\"organizationId != null\"></app-header>\n\n<bit-container>\n  <div class=\"tabbed-header\" *ngIf=\"organizationId == null\">\n    <h1 *ngIf=\"!organizationId || !isEnterpriseOrg\">{{ \"twoStepLogin\" | i18n }}</h1>\n    <h1 *ngIf=\"organizationId && isEnterpriseOrg\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n  </div>\n\n  <p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n  <ng-container *ngIf=\"organizationId\">\n    <p>\n      <ng-container *ngIf=\"isEnterpriseOrg; else teamsDescription\">\n        {{ \"twoStepLoginEnterpriseDescStart\" | i18n }}\n        <a bitLink routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n        <br />\n        {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n        <br />\n        <br />\n        <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n      </ng-container>\n      <ng-template #teamsDescription>\n        {{ \"twoStepLoginTeamsDesc\" | i18n }}\n        <br />\n        {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n      </ng-template>\n    </p>\n  </ng-container>\n  <bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n    <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n    <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n      {{ \"viewRecoveryCode\" | i18n }}\n    </button>\n  </bit-callout>\n  <h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n    {{ \"providers\" | i18n }}\n    <small *ngIf=\"loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h2>\n  <bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n    {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n  </bit-callout>\n  <ul class=\"list-group list-group-2fa\">\n    <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n      <div class=\"logo-2fa d-flex justify-content-center\">\n        <auth-two-factor-icon [provider]=\"p.type\" [name]=\"p.name\" />\n      </div>\n      <div class=\"mx-4\">\n        <h3 class=\"mb-0\">\n          <div\n            class=\"font-weight-semibold tw-text-base\"\n            [style]=\"p.enabled || p.premium ? 'display:inline-block' : ''\"\n          >\n            {{ p.name }}\n          </div>\n          <ng-container *ngIf=\"p.enabled\">\n            <i\n              class=\"bwi bwi-check text-success bwi-fw\"\n              title=\"{{ 'enabled' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"tw-sr-only\">{{ \"enabled\" | i18n }}</span>\n          </ng-container>\n          <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n        </h3>\n        {{ p.description }}\n      </div>\n      <div class=\"ml-auto\">\n        <button\n          type=\"button\"\n          bitButton\n          buttonType=\"secondary\"\n          [disabled]=\"!(canAccessPremium$ | async) && p.premium\"\n          (click)=\"manage(p.type)\"\n        >\n          {{ \"manage\" | i18n }}\n        </button>\n      </div>\n    </li>\n  </ul>\n</bit-container>\n\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, takeUntil, map, lastValueFrom } from \"rxjs\";\nimport { first, tap } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/admin-console/abstractions/policy/policy.service.abstraction\";\nimport { AccountService } from \"@bitwarden/common/auth/abstractions/account.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/auth/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\nimport { BillingAccountProfileStateService } from \"@bitwarden/common/billing/abstractions/account/billing-account-profile-state.service\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { TwoFactorSetupDuoComponent } from \"../../../auth/settings/two-factor/two-factor-setup-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../../auth/settings/two-factor/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../../../auth/settings/two-factor/two-factor-verify.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../../auth/settings/two-factor/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent implements OnInit {\n  tabbedHeader = false;\n  constructor(\n    dialogService: DialogService,\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    billingAccountProfileStateService: BillingAccountProfileStateService,\n    accountService: AccountService,\n  ) {\n    super(\n      dialogService,\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      billingAccountProfileStateService,\n      accountService,\n    );\n  }\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap((params) =>\n          this.organizationService\n            .get$(params.organizationId)\n            .pipe(map((organization) => ({ params, organization }))),\n        ),\n        tap(async (mapResponse) => {\n          this.organizationId = mapResponse.params.organizationId;\n          this.organization = mapResponse.organization;\n        }),\n        concatMap(async () => await super.ngOnInit()),\n        takeUntil(this.destroy$),\n      )\n      .subscribe();\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    // clear any existing subscriptions before creating a new one\n    this.twoFactorSetupSubscription?.unsubscribe();\n\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const twoFactorVerifyDialogRef = TwoFactorVerifyComponent.open(this.dialogService, {\n          data: { type: type, organizationId: this.organizationId },\n        });\n        const result: AuthResponse<TwoFactorDuoResponse> = await lastValueFrom(\n          twoFactorVerifyDialogRef.closed,\n        );\n        if (!result) {\n          return;\n        }\n        const duoComp: DialogRef<boolean, any> = TwoFactorSetupDuoComponent.open(\n          this.dialogService,\n          {\n            data: {\n              authResponse: result,\n              organizationId: this.organizationId,\n            },\n          },\n        );\n        this.twoFactorSetupSubscription = duoComp.componentInstance.onChangeStatus\n          .pipe(first(), takeUntil(this.destroy$))\n          .subscribe((enabled: boolean) => {\n            duoComp.close();\n            this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n          });\n\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { inject, NgModule } from \"@angular/core\";\nimport { CanMatchFn, RouterModule, Routes } from \"@angular/router\";\nimport { map } from \"rxjs\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\nimport { ConfigService } from \"@bitwarden/common/platform/abstractions/config/config.service\";\n\nimport { organizationPermissionsGuard } from \"../../organizations/guards/org-permissions.guard\";\nimport { organizationRedirectGuard } from \"../../organizations/guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst removeProviderExportPermission$: CanMatchFn = () =>\n  inject(ConfigService)\n    .getFeatureFlag$(FeatureFlag.PM11360RemoveProviderExportPermission)\n    .pipe(map((removeProviderExport) => removeProviderExport === true));\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [organizationPermissionsGuard(canAccessSettingsTab)],\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [organizationRedirectGuard(getSettingsRoute)],\n        children: [], // This is required to make the auto redirect work,\n      },\n      {\n        path: \"account\",\n        component: AccountComponent,\n        canActivate: [organizationPermissionsGuard((o) => o.isOwner)],\n        data: {\n          titleId: \"organizationInfo\",\n        },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        canActivate: [organizationPermissionsGuard((o) => o.use2fa && o.isOwner)],\n        data: {\n          titleId: \"twoStepLogin\",\n        },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [organizationPermissionsGuard((org) => org.canManagePolicies)],\n        data: {\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        children: [\n          {\n            path: \"import\",\n            loadComponent: () =>\n              import(\"./org-import.component\").then((mod) => mod.OrgImportComponent),\n            canActivate: [organizationPermissionsGuard((org) => org.canAccessImport)],\n            data: {\n              titleId: \"importData\",\n            },\n          },\n\n          // Export routing is temporarily duplicated to set the flag value passed into org.canAccessExport\n          {\n            path: \"export\",\n            loadComponent: () =>\n              import(\"../tools/vault-export/org-vault-export.component\").then(\n                (mod) => mod.OrganizationVaultExportComponent,\n              ),\n            canMatch: [removeProviderExportPermission$], // if this matches, the flag is ON\n            canActivate: [organizationPermissionsGuard((org) => org.canAccessExport(true))],\n            data: {\n              titleId: \"exportVault\",\n            },\n          },\n          {\n            path: \"export\",\n            loadComponent: () =>\n              import(\"../tools/vault-export/org-vault-export.component\").then(\n                (mod) => mod.OrganizationVaultExportComponent,\n              ),\n            canActivate: [organizationPermissionsGuard((org) => org.canAccessExport(false))],\n            data: {\n              titleId: \"exportVault\",\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  if (organization.canManageDeviceApprovals) {\n    return \"device-approvals\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../../shared\";\nimport { AccountFingerprintComponent } from \"../../../shared/components/account-fingerprint/account-fingerprint.component\";\nimport { PoliciesModule } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    PoliciesModule,\n    OrganizationSettingsRoutingModule,\n    AccountFingerprintComponent,\n  ],\n  declarations: [AccountComponent, TwoFactorSetupComponent],\n})\nexport class OrganizationSettingsModule {}\n"],"names":["OrganizationUpdateRequest","viewApiKey","rotateApiKey","AccountComponent","constructor","modalService","i18nService","route","platformUtilsService","keyService","router","organizationService","organizationApiService","dialogService","formBuilder","toastService","configService","selfHosted","canEditSubscription","loading","canUseApi","formGroup","this","group","orgName","control","value","disabled","validators","required","maxLength","updateOn","billingEmail","email","collectionManagementFormGroup","limitCollectionCreation","limitCollectionDeletion","allowAdminAccessToAllCollectionItems","destroy$","Subject","submit","markAllAsTouched","invalid","request","name","get","org","hasPublicAndPrivateKeys","orgShareKey","getOrgKey","organizationId","orgKeys","makeKeyPair","keys","encryptedString","save","showToast","variant","title","message","t","submitCollectionManagement","purgeVault","dialogRef","open","data","lastValueFrom","closed","ngOnInit","params","pipe","switchMap","get$","organization","combineLatest","of","from","id","getKeys","takeUntil","subscribe","orgResponse","useApi","enable","publicKeyBuffer","fromB64ToArray","publicKey","patchValue","ngOnDestroy","next","complete","deleteOrganization","dialog","requestType","Deleted","navigate","keyType","entityId","postKey","getOrCreateApiKey","bind","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","isRotation","recoveryCode","manage","TwoFactorSetupComponent","apiService","messagingService","policyService","billingAccountProfileStateService","accountService","super","tabbedHeader","concatMap","map","tap","mapResponse","type","twoFactorSetupSubscription","unsubscribe","OrganizationDuo","twoFactorVerifyDialogRef","result","duoComp","authResponse","componentInstance","onChangeStatus","first","enabled","close","updateStatus","getTwoFactorProviders","getTwoFactorOrganizationProviders","filterProvider","routes","path","canActivate","children","pathMatch","isOwner","canManagePolicies","canAccessImport","canManageSso","canManageScim","canManageDeviceApprovals","component","o","titleId","use2fa","loadComponent","then","mod","OrgImportComponent","OrganizationVaultExportComponent","canMatch","getFeatureFlag$","PM11360RemoveProviderExportPermission","removeProviderExport","canAccessExport","OrganizationSettingsRoutingModule","forChild","OrganizationSettingsModule"],"sourceRoot":""}