{
	"version": 3,
	"file": "connectors/duo-redirect.a8aee212b2ba62d2b905.js",
	"mappings": "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",
	"sources": ["webpack://@bitwarden/web-vault/webpack/bootstrap", "webpack://@bitwarden/web-vault/./src/connectors/common.ts", "webpack://@bitwarden/web-vault/webpack/runtime/make namespace object", "webpack://@bitwarden/web-vault/../../libs/common/src/platform/services/translation.service.ts", "webpack://@bitwarden/web-vault/./src/translation-constants.ts", "webpack://@bitwarden/web-vault/./src/connectors/translation.service.ts", "webpack://@bitwarden/web-vault/./src/connectors/duo-redirect.ts"],
	"sourcesContent": ["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "export function getQsParam(name: string) {\n  const url = window.location.href;\n  // eslint-disable-next-line\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport function b64Decode(str: string, spaceAsPlus = false) {\n  if (spaceAsPlus) {\n    str = str.replace(/ /g, \"+\");\n  }\n\n  return decodeURIComponent(\n    Array.prototype.map\n      .call(atob(str), (c: string) => {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(\"\"),\n  );\n}\n", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { TranslationService as TranslationServiceAbstraction } from \"../abstractions/translation.service\";\n\nexport abstract class TranslationService implements TranslationServiceAbstraction {\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  defaultLocale = \"en\";\n  abstract translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"cy\", \"Cymraeg, y Gymraeg\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"gl\", \"galego\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"mr\", \"मराठी\"],\n    [\"my\", \"ဗမာစကား\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"ne\", \"नेपाली\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"or\", \"ଓଡ଼ିଆ\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"te\", \"తెలుగు\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>,\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.defaultLocale;\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.defaultLocale) {\n        await this.loadMessages(this.defaultLocale, this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1.toString());\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2.toString());\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3.toString());\n      }\n    }\n\n    return result;\n  }\n\n  protected async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent,\n          );\n        }\n      }\n    }\n  }\n}\n", "// Please leave 'en' where it is, as it's our fallback language in case no translation can be found\nexport const SupportedTranslationLocales: string[] = [\n  \"en\",\n  \"af\",\n  \"ar\",\n  \"az\",\n  \"be\",\n  \"bg\",\n  \"bn\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"cy\",\n  \"da\",\n  \"de\",\n  \"el\",\n  \"en-GB\",\n  \"en-IN\",\n  \"eo\",\n  \"es\",\n  \"et\",\n  \"eu\",\n  \"fa\",\n  \"fi\",\n  \"fil\",\n  \"fr\",\n  \"gl\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"ja\",\n  \"ka\",\n  \"km\",\n  \"kn\",\n  \"ko\",\n  \"lv\",\n  \"ml\",\n  \"mr\",\n  \"my\",\n  \"nb\",\n  \"ne\",\n  \"nl\",\n  \"nn\",\n  \"or\",\n  \"pl\",\n  \"pt-PT\",\n  \"pt-BR\",\n  \"ro\",\n  \"ru\",\n  \"si\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"te\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-TW\",\n];\n", "// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { TranslationService as BaseTranslationService } from \"@bitwarden/common/platform/services/translation.service\";\n\nimport { SupportedTranslationLocales } from \"../translation-constants\";\n\nexport class TranslationService extends BaseTranslationService {\n  private _translationLocale: string;\n\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    this.supportedTranslationLocales = SupportedTranslationLocales;\n  }\n\n  get translationLocale(): string {\n    return this._translationLocale;\n  }\n\n  set translationLocale(locale: string) {\n    this._translationLocale = locale;\n  }\n}\n", "// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { getQsParam } from \"./common\";\nimport { TranslationService } from \"./translation.service\";\n\nrequire(\"./duo-redirect.scss\");\n\nconst mobileDesktopCallback = \"bitwarden://duo-callback\";\nlet localeService: TranslationService = null;\n\nwindow.addEventListener(\"load\", async () => {\n  const redirectUrl = getQsParam(\"duoFramelessUrl\");\n\n  if (redirectUrl) {\n    redirectToDuoFrameless(redirectUrl);\n    return;\n  }\n\n  const client = getQsParam(\"client\");\n  const code = getQsParam(\"code\");\n  const state = getQsParam(\"state\");\n\n  localeService = new TranslationService(navigator.language, \"locales\");\n  await localeService.init();\n\n  if (client === \"web\") {\n    const channel = new BroadcastChannel(\"duoResult\");\n\n    channel.postMessage({ code: code, state: state });\n    channel.close();\n\n    displayHandoffMessage(client);\n  } else if (client === \"browser\") {\n    window.postMessage({ command: \"duoResult\", code: code, state: state }, \"*\");\n    displayHandoffMessage(client);\n  } else if (client === \"mobile\" || client === \"desktop\") {\n    if (client === \"desktop\") {\n      displayHandoffMessage(client);\n    }\n    document.location.replace(\n      mobileDesktopCallback +\n        \"?code=\" +\n        encodeURIComponent(code) +\n        \"&state=\" +\n        encodeURIComponent(state),\n    );\n  }\n});\n\n/**\n * validate the Duo AuthUrl and redirect to it.\n * @param redirectUrl the duo auth url\n */\nfunction redirectToDuoFrameless(redirectUrl: string) {\n  const validateUrl = new URL(redirectUrl);\n  const validDuoUrl =\n    validateUrl.protocol === \"https:\" &&\n    (validateUrl.hostname.endsWith(\".duosecurity.com\") ||\n      validateUrl.hostname.endsWith(\".duofederal.com\"));\n\n  if (!validDuoUrl) {\n    throw new Error(\"Invalid redirect URL\");\n  }\n\n  window.location.href = decodeURIComponent(redirectUrl);\n}\n\n/**\n * Note: browsers won't let javascript close a tab (button or otherwise) that wasn't opened by javascript,\n * so browser, desktop, and mobile are not able to take advantage of the countdown timer or close button.\n */\nfunction displayHandoffMessage(client: string) {\n  const content = document.getElementById(\"content\");\n  content.className = \"text-center\";\n  content.innerHTML = \"\";\n\n  const h1 = document.createElement(\"h1\");\n  const p = document.createElement(\"p\");\n\n  h1.textContent = localeService.t(\"youSuccessfullyLoggedIn\");\n  p.textContent =\n    client == \"web\"\n      ? (p.textContent = localeService.t(\"thisWindowWillCloseIn5Seconds\"))\n      : localeService.t(\"youMayCloseThisWindow\");\n\n  h1.className = \"font-weight-semibold\";\n  p.className = \"mb-4\";\n\n  content.appendChild(h1);\n  content.appendChild(p);\n\n  // Web client will have a close button as well as an auto close timer\n  if (client == \"web\") {\n    const button = document.createElement(\"button\");\n    button.textContent = localeService.t(\"close\");\n    button.className = \"bg-primary text-white border-0 rounded py-2 px-3\";\n\n    button.addEventListener(\"click\", () => {\n      window.close();\n    });\n    content.appendChild(button);\n\n    // Countdown timer (closes tab upon completion)\n    let num = Number(p.textContent.match(/\\d+/)[0]);\n\n    const interval = setInterval(() => {\n      if (num > 1) {\n        p.textContent = p.textContent.replace(String(num), String(num - 1));\n        num--;\n      } else {\n        clearInterval(interval);\n        window.close();\n      }\n    }, 1000);\n  }\n}\n"],
	"names": ["__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "undefined", "exports", "module", "__webpack_modules__", "getQsParam", "name", "url", "window", "location", "href", "replace", "results", "RegExp", "exec", "decodeURIComponent", "r", "Symbol", "toStringTag", "Object", "defineProperty", "value", "constructor", "systemLanguage", "localesDirectory", "getLocalesJson", "supportedTranslationLocales", "defaultLocale", "localeNames", "Map", "defaultMessages", "localeMessages", "this", "init", "locale", "inited", "Error", "length", "translationLocale", "collator", "Intl", "Collator", "numeric", "sensitivity", "indexOf", "slice", "loadMessages", "t", "id", "p1", "p2", "p3", "translate", "result", "hasOwnProperty", "split", "join", "toString", "messagesObj", "formattedLocale", "locales", "prop", "message", "placeholders", "placeProp", "content", "replaceToken", "toUpperCase", "replaceContent", "SupportedTranslationLocales", "TranslationService", "super", "filePath", "localesResult", "fetch", "json", "_translationLocale", "localeService", "displayHandoffMessage", "client", "document", "getElementById", "className", "innerHTML", "h1", "createElement", "p", "textContent", "appendChild", "button", "addEventListener", "close", "num", "Number", "match", "interval", "setInterval", "String", "clearInterval", "redirectUrl", "validateUrl", "URL", "protocol", "hostname", "endsWith", "redirectToDuoFrameless", "code", "state", "navigator", "language", "channel", "BroadcastChannel", "postMessage", "command", "mobileDesktopCallback", "encodeURIComponent"],
	"sourceRoot": ""
}