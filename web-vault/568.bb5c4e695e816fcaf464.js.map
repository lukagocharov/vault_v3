{"version":3,"file":"568.bb5c4e695e816fcaf464.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/./src/app/billing/individual/billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/billing/individual/billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/self-hosting-license-uploader/individual-self-hosting-license-uploader.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/self-hosting-license-uploader/self-hosting-license-uploader.component.html","webpack://@bitwarden/web-vault/./src/app/billing/individual/premium/premium-v2.component.html","webpack://@bitwarden/web-vault/./src/app/billing/individual/premium/premium-v2.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/individual/premium/premium.component.html","webpack://@bitwarden/web-vault/./src/app/billing/individual/premium/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/individual/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/billing/individual/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/update-license-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/update-license-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/individual/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/billing/individual/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/individual/individual-billing-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/billing/individual/individual-billing.module.ts"],"sourcesContent":["<div class=\"tw-flex tw-justify-between tw-mb-2 tw-pb-2 tw-mt-6\">\n  <h2 bitTypography=\"h2\">\n    {{ \"billingHistory\" | i18n }}\n  </h2>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin tw-text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"openInvoices || paidInvoices || transactions\">\n  <app-billing-history\n    [openInvoices]=\"openInvoices\"\n    [paidInvoices]=\"paidInvoices\"\n    [transactions]=\"transactions\"\n  ></app-billing-history>\n  <button\n    type=\"button\"\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    *ngIf=\"hasAdditionalHistory\"\n  >\n    {{ \"loadMore\" | i18n }}\n  </button>\n</ng-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { AccountBillingApiServiceAbstraction } from \"@bitwarden/common/billing/abstractions/account/account-billing-api.service.abstraction\";\nimport {\n  BillingInvoiceResponse,\n  BillingTransactionResponse,\n} from \"@bitwarden/common/billing/models/response/billing.response\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\n@Component({\n  templateUrl: \"billing-history-view.component.html\",\n})\nexport class BillingHistoryViewComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  openInvoices: BillingInvoiceResponse[] = [];\n  paidInvoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n  hasAdditionalHistory: boolean = false;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private accountBillingApiService: AccountBillingApiServiceAbstraction,\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n\n    const openInvoicesPromise = this.accountBillingApiService.getBillingInvoices(\n      \"open\",\n      this.openInvoices.length > 0 ? this.openInvoices[this.openInvoices.length - 1].id : null,\n    );\n\n    const paidInvoicesPromise = this.accountBillingApiService.getBillingInvoices(\n      \"paid\",\n      this.paidInvoices.length > 0 ? this.paidInvoices[this.paidInvoices.length - 1].id : null,\n    );\n\n    const transactionsPromise = this.accountBillingApiService.getBillingTransactions(\n      this.transactions.length > 0\n        ? this.transactions[this.transactions.length - 1].createdDate\n        : null,\n    );\n\n    const openInvoices = await openInvoicesPromise;\n    const paidInvoices = await paidInvoicesPromise;\n    const transactions = await transactionsPromise;\n\n    const pageSize = 5;\n\n    this.openInvoices = [...this.openInvoices, ...openInvoices];\n    this.paidInvoices = [...this.paidInvoices, ...paidInvoices];\n    this.transactions = [...this.transactions, ...transactions];\n\n    this.hasAdditionalHistory =\n      openInvoices.length >= pageSize ||\n      paidInvoices.length >= pageSize ||\n      transactions.length >= pageSize;\n\n    this.loading = false;\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { SyncService } from \"@bitwarden/common/platform/sync\";\nimport { ToastService } from \"@bitwarden/components\";\n\nimport { AbstractSelfHostingLicenseUploaderComponent } from \"../../shared/self-hosting-license-uploader/abstract-self-hosting-license-uploader.component\";\n\n/**\n * Processes license file uploads for individual plans.\n * @remarks Requires self-hosting.\n */\n@Component({\n  selector: \"individual-self-hosting-license-uploader\",\n  templateUrl: \"./self-hosting-license-uploader.component.html\",\n})\nexport class IndividualSelfHostingLicenseUploaderComponent extends AbstractSelfHostingLicenseUploaderComponent {\n  /**\n   * Emitted when a license file has been successfully uploaded & processed.\n   */\n  @Output() onLicenseFileUploaded: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(\n    protected readonly apiService: ApiService,\n    protected readonly formBuilder: FormBuilder,\n    protected readonly i18nService: I18nService,\n    protected readonly platformUtilsService: PlatformUtilsService,\n    protected readonly syncService: SyncService,\n    protected readonly toastService: ToastService,\n    protected readonly tokenService: TokenService,\n  ) {\n    super(formBuilder, i18nService, platformUtilsService, toastService, tokenService);\n  }\n\n  protected async submit(): Promise<void> {\n    await super.submit();\n\n    const formData = new FormData();\n    formData.append(\"license\", this.formValue.file);\n\n    await this.apiService.postAccountLicense(formData);\n\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n\n    this.onLicenseFileUploaded.emit();\n  }\n\n  get description(): string {\n    return \"uploadLicenseFilePremium\";\n  }\n\n  get hintFileName(): string {\n    return \"bitwarden_premium_license.json\";\n  }\n}\n","<p bitTypography=\"body1\">{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n<form [formGroup]=\"form\" [bitSubmit]=\"submit\">\n  <bit-form-field>\n    <bit-label>{{ description | i18n }}</bit-label>\n    <div>\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"fileSelector.click()\">\n        {{ \"chooseFile\" | i18n }}\n      </button>\n      {{ form.value.file ? form.value.file.name : (\"noFileChosen\" | i18n) }}\n    </div>\n    <input\n      #fileSelector\n      bitInput\n      type=\"file\"\n      formControlName=\"file\"\n      (change)=\"onLicenseFileSelectedChanged($event)\"\n      accept=\"application/JSON\"\n      hidden\n      class=\"tw-hidden\"\n    />\n    <bit-hint>{{ \"licenseFileDesc\" | i18n: hintFileName }}</bit-hint>\n  </bit-form-field>\n  <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","<bit-section>\n  <h2 *ngIf=\"!isSelfHost\" bitTypography=\"h2\">{{ \"goPremium\" | i18n }}</h2>\n  <bit-callout\n    type=\"info\"\n    *ngIf=\"hasPremiumFromAnyOrganization$ | async\"\n    title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n    icon=\"bwi bwi-star-f\"\n  >\n    {{ \"alreadyPremiumFromOrg\" | i18n }}\n  </bit-callout>\n  <bit-callout type=\"success\">\n    <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n    <ul class=\"bwi-ul\">\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpStorage\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpTwoStepOptions\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpEmergency\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpReports\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpTotp\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpSupport\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpFuture\" | i18n }}\n      </li>\n    </ul>\n    <p bitTypography=\"body1\" [ngClass]=\"{ 'tw-mb-0': !isSelfHost }\">\n      {{\n        \"premiumPriceWithFamilyPlan\" | i18n: (premiumPrice | currency: \"$\") : familyPlanMaxUserCount\n      }}\n      <a\n        bitLink\n        linkType=\"primary\"\n        routerLink=\"/create-organization\"\n        [queryParams]=\"{ plan: 'families' }\"\n      >\n        {{ \"bitwardenFamiliesPlan\" | i18n }}\n      </a>\n    </p>\n    <a\n      bitButton\n      href=\"{{ premiumURL }}}\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      buttonType=\"secondary\"\n      *ngIf=\"isSelfHost\"\n    >\n      {{ \"purchasePremium\" | i18n }}\n    </a>\n  </bit-callout>\n</bit-section>\n<bit-section *ngIf=\"isSelfHost\">\n  <ng-container *ngIf=\"!(useLicenseUploaderComponent$ | async)\">\n    <p bitTypography=\"body1\">{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n    <form [formGroup]=\"licenseFormGroup\" [bitSubmit]=\"submitPremiumLicense\">\n      <bit-form-field>\n        <bit-label>{{ \"licenseFile\" | i18n }}</bit-label>\n        <div>\n          <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"fileSelector.click()\">\n            {{ \"chooseFile\" | i18n }}\n          </button>\n          {{\n            licenseFormGroup.value.file ? licenseFormGroup.value.file.name : (\"noFileChosen\" | i18n)\n          }}\n        </div>\n        <input\n          bitInput\n          #fileSelector\n          type=\"file\"\n          formControlName=\"file\"\n          (change)=\"onLicenseFileSelected($event)\"\n          hidden\n          class=\"tw-hidden\"\n        />\n        <bit-hint>{{ \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\" }}</bit-hint>\n      </bit-form-field>\n      <button type=\"submit\" buttonType=\"primary\" bitButton bitFormButton>\n        {{ \"submit\" | i18n }}\n      </button>\n    </form>\n  </ng-container>\n  <individual-self-hosting-license-uploader\n    *ngIf=\"useLicenseUploaderComponent$ | async\"\n    (onLicenseFileUploaded)=\"onLicenseFileSelectedChanged()\"\n  />\n</bit-section>\n<form *ngIf=\"!isSelfHost\" [formGroup]=\"addOnFormGroup\" [bitSubmit]=\"submitPayment\">\n  <bit-section>\n    <h2 bitTypography=\"h2\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"tw-grid tw-grid-cols-12 tw-gap-4\">\n      <bit-form-field class=\"tw-col-span-6\">\n        <bit-label>{{ \"additionalStorageGb\" | i18n }}</bit-label>\n        <input\n          bitInput\n          formControlName=\"additionalStorage\"\n          type=\"number\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <bit-hint>{{\n          \"additionalStorageIntervalDesc\"\n            | i18n: \"1 GB\" : (storageGBPrice | currency: \"$\") : (\"year\" | i18n)\n        }}</bit-hint>\n      </bit-form-field>\n    </div>\n  </bit-section>\n  <bit-section>\n    <h2 bitTypography=\"h2\">{{ \"summary\" | i18n }}</h2>\n    {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n    {{ \"additionalStorageGb\" | i18n }}: {{ addOnFormGroup.value.additionalStorage || 0 }} GB &times;\n    {{ storageGBPrice | currency: \"$\" }} =\n    {{ additionalStorageCost | currency: \"$\" }}\n    <hr class=\"tw-my-3\" />\n  </bit-section>\n  <bit-section>\n    <h3 bitTypography=\"h2\">{{ \"paymentInformation\" | i18n }}</h3>\n    <app-payment-v2 [showBankAccount]=\"false\"></app-payment-v2>\n    <app-tax-info (taxInformationChanged)=\"onTaxInformationChanged()\"></app-tax-info>\n    <div class=\"tw-mb-4\">\n      <div class=\"tw-text-muted tw-text-sm tw-flex tw-flex-col\">\n        <span>{{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}</span>\n        <span>{{ \"estimatedTax\" | i18n }}: {{ estimatedTax | currency: \"USD $\" }}</span>\n      </div>\n    </div>\n    <hr class=\"tw-my-1 tw-w-1/4 tw-ml-0\" />\n    <p bitTypography=\"body1\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n    <button type=\"submit\" buttonType=\"primary\" bitButton bitFormButton>\n      {{ \"submit\" | i18n }}\n    </button>\n  </bit-section>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, ViewChild } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { combineLatest, concatMap, from, Observable, of, switchMap } from \"rxjs\";\nimport { debounceTime } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AccountService } from \"@bitwarden/common/auth/abstractions/account.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { BillingAccountProfileStateService } from \"@bitwarden/common/billing/abstractions\";\nimport { TaxServiceAbstraction } from \"@bitwarden/common/billing/abstractions/tax.service.abstraction\";\nimport { PreviewIndividualInvoiceRequest } from \"@bitwarden/common/billing/models/request/preview-individual-invoice.request\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\nimport { ConfigService } from \"@bitwarden/common/platform/abstractions/config/config.service\";\nimport { EnvironmentService } from \"@bitwarden/common/platform/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { SyncService } from \"@bitwarden/common/platform/sync\";\nimport { ToastService } from \"@bitwarden/components\";\n\nimport { PaymentV2Component } from \"../../shared/payment/payment-v2.component\";\nimport { TaxInfoComponent } from \"../../shared/tax-info.component\";\n\n@Component({\n  templateUrl: \"./premium-v2.component.html\",\n})\nexport class PremiumV2Component {\n  @ViewChild(PaymentV2Component) paymentComponent: PaymentV2Component;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  protected hasPremiumFromAnyOrganization$: Observable<boolean>;\n\n  protected addOnFormGroup = new FormGroup({\n    additionalStorage: new FormControl<number>(0, [Validators.min(0), Validators.max(99)]),\n  });\n\n  protected licenseFormGroup = new FormGroup({\n    file: new FormControl<File>(null, [Validators.required]),\n  });\n\n  protected cloudWebVaultURL: string;\n  protected isSelfHost = false;\n\n  protected useLicenseUploaderComponent$ = this.configService.getFeatureFlag$(\n    FeatureFlag.PM11901_RefactorSelfHostingLicenseUploader,\n  );\n\n  protected estimatedTax: number = 0;\n  protected readonly familyPlanMaxUserCount = 6;\n  protected readonly premiumPrice = 10;\n  protected readonly storageGBPrice = 4;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private apiService: ApiService,\n    private billingAccountProfileStateService: BillingAccountProfileStateService,\n    private configService: ConfigService,\n    private environmentService: EnvironmentService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private syncService: SyncService,\n    private toastService: ToastService,\n    private tokenService: TokenService,\n    private taxService: TaxServiceAbstraction,\n    private accountService: AccountService,\n  ) {\n    this.isSelfHost = this.platformUtilsService.isSelfHost();\n\n    this.hasPremiumFromAnyOrganization$ = this.accountService.activeAccount$.pipe(\n      switchMap((account) =>\n        this.billingAccountProfileStateService.hasPremiumFromAnyOrganization$(account.id),\n      ),\n    );\n\n    combineLatest([\n      this.accountService.activeAccount$.pipe(\n        switchMap((account) =>\n          this.billingAccountProfileStateService.hasPremiumPersonally$(account.id),\n        ),\n      ),\n      this.environmentService.cloudWebVaultUrl$,\n    ])\n      .pipe(\n        takeUntilDestroyed(),\n        concatMap(([hasPremiumPersonally, cloudWebVaultURL]) => {\n          if (hasPremiumPersonally) {\n            return from(this.navigateToSubscriptionPage());\n          }\n\n          this.cloudWebVaultURL = cloudWebVaultURL;\n          return of(true);\n        }),\n      )\n      .subscribe();\n\n    this.addOnFormGroup.controls.additionalStorage.valueChanges\n      .pipe(debounceTime(1000), takeUntilDestroyed())\n      .subscribe(() => {\n        this.refreshSalesTax();\n      });\n  }\n\n  finalizeUpgrade = async () => {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n  };\n\n  postFinalizeUpgrade = async () => {\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"premiumUpdated\"),\n    });\n    await this.navigateToSubscriptionPage();\n  };\n\n  navigateToSubscriptionPage = (): Promise<boolean> =>\n    this.router.navigate([\"../user-subscription\"], { relativeTo: this.activatedRoute });\n\n  onLicenseFileSelected = (event: Event): void => {\n    const element = event.target as HTMLInputElement;\n    this.licenseFormGroup.value.file = element.files.length > 0 ? element.files[0] : null;\n  };\n\n  submitPremiumLicense = async (): Promise<void> => {\n    this.licenseFormGroup.markAllAsTouched();\n\n    if (this.licenseFormGroup.invalid) {\n      return this.toastService.showToast({\n        variant: \"error\",\n        title: this.i18nService.t(\"errorOccurred\"),\n        message: this.i18nService.t(\"selectFile\"),\n      });\n    }\n\n    const emailVerified = await this.tokenService.getEmailVerified();\n    if (!emailVerified) {\n      return this.toastService.showToast({\n        variant: \"error\",\n        title: this.i18nService.t(\"errorOccurred\"),\n        message: this.i18nService.t(\"verifyEmailFirst\"),\n      });\n    }\n\n    const formData = new FormData();\n    formData.append(\"license\", this.licenseFormGroup.value.file);\n\n    await this.apiService.postAccountLicense(formData);\n    await this.finalizeUpgrade();\n    await this.postFinalizeUpgrade();\n  };\n\n  submitPayment = async (): Promise<void> => {\n    this.taxInfoComponent.taxFormGroup.markAllAsTouched();\n    if (this.taxInfoComponent.taxFormGroup.invalid) {\n      return;\n    }\n\n    const { type, token } = await this.paymentComponent.tokenize();\n\n    const formData = new FormData();\n    formData.append(\"paymentMethodType\", type.toString());\n    formData.append(\"paymentToken\", token);\n    formData.append(\"additionalStorageGb\", this.addOnFormGroup.value.additionalStorage.toString());\n    formData.append(\"country\", this.taxInfoComponent.country);\n    formData.append(\"postalCode\", this.taxInfoComponent.postalCode);\n\n    await this.apiService.postPremium(formData);\n    await this.finalizeUpgrade();\n    await this.postFinalizeUpgrade();\n  };\n\n  protected get additionalStorageCost(): number {\n    return this.storageGBPrice * this.addOnFormGroup.value.additionalStorage;\n  }\n\n  protected get premiumURL(): string {\n    return `${this.cloudWebVaultURL}/#/settings/subscription/premium`;\n  }\n\n  protected get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageCost;\n  }\n\n  protected get total(): number {\n    return this.subtotal + this.estimatedTax;\n  }\n\n  protected async onLicenseFileSelectedChanged(): Promise<void> {\n    await this.postFinalizeUpgrade();\n  }\n\n  private refreshSalesTax(): void {\n    if (!this.taxInfoComponent.country || !this.taxInfoComponent.postalCode) {\n      return;\n    }\n    const request: PreviewIndividualInvoiceRequest = {\n      passwordManager: {\n        additionalStorage: this.addOnFormGroup.value.additionalStorage,\n      },\n      taxInformation: {\n        postalCode: this.taxInfoComponent.postalCode,\n        country: this.taxInfoComponent.country,\n      },\n    };\n\n    this.taxService\n      .previewIndividualInvoice(request)\n      .then((invoice) => {\n        this.estimatedTax = invoice.taxAmount;\n      })\n      .catch((error) => {\n        this.toastService.showToast({\n          title: \"\",\n          variant: \"error\",\n          message: this.i18nService.t(error.message),\n        });\n      });\n  }\n\n  protected onTaxInformationChanged(): void {\n    this.refreshSalesTax();\n  }\n}\n","<bit-section>\n  <h2 *ngIf=\"!selfHosted\" bitTypography=\"h2\">{{ \"goPremium\" | i18n }}</h2>\n  <bit-callout\n    type=\"info\"\n    *ngIf=\"canAccessPremium$ | async\"\n    title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n    icon=\"bwi bwi-star-f\"\n  >\n    {{ \"alreadyPremiumFromOrg\" | i18n }}\n  </bit-callout>\n  <bit-callout type=\"success\">\n    <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n    <ul class=\"bwi-ul\">\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpStorage\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpTwoStepOptions\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpEmergency\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpReports\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpTotp\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpSupport\" | i18n }}\n      </li>\n      <li>\n        <i class=\"bwi bwi-check tw-text-success bwi-li\" aria-hidden=\"true\"></i>\n        {{ \"premiumSignUpFuture\" | i18n }}\n      </li>\n    </ul>\n    <p bitTypography=\"body1\" [ngClass]=\"{ 'tw-mb-0': !selfHosted }\">\n      {{\n        \"premiumPriceWithFamilyPlan\" | i18n: (premiumPrice | currency: \"$\") : familyPlanMaxUserCount\n      }}\n      <a\n        bitLink\n        linkType=\"primary\"\n        routerLink=\"/create-organization\"\n        [queryParams]=\"{ plan: 'families' }\"\n        >{{ \"bitwardenFamiliesPlan\" | i18n }}</a\n      >\n    </p>\n    <a\n      bitButton\n      href=\"{{ this.cloudWebVaultUrl }}/#/settings/subscription/premium\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      buttonType=\"secondary\"\n      *ngIf=\"selfHosted\"\n    >\n      {{ \"purchasePremium\" | i18n }}\n    </a>\n  </bit-callout>\n</bit-section>\n<bit-section *ngIf=\"selfHosted\">\n  <p bitTypography=\"body1\">{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form [formGroup]=\"licenseForm\" [bitSubmit]=\"submit\">\n    <bit-form-field>\n      <bit-label>{{ \"licenseFile\" | i18n }}</bit-label>\n      <div class=\"tw-pt-2 tw-pb-1\">\n        <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"fileSelector.click()\">\n          {{ \"chooseFile\" | i18n }}\n        </button>\n        {{ this.licenseFile ? this.licenseFile.name : (\"noFileChosen\" | i18n) }}\n      </div>\n      <input\n        bitInput\n        #fileSelector\n        type=\"file\"\n        formControlName=\"file\"\n        (change)=\"setSelectedFile($event)\"\n        hidden\n        class=\"tw-hidden\"\n      />\n      <bit-hint>{{ \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\" }}</bit-hint>\n    </bit-form-field>\n    <button type=\"submit\" buttonType=\"primary\" bitButton bitFormButton>\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</bit-section>\n<form [formGroup]=\"addonForm\" [bitSubmit]=\"submit\" *ngIf=\"!selfHosted\">\n  <bit-section>\n    <h2 bitTypography=\"h2\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"tw-grid tw-grid-cols-12 tw-gap-4\">\n      <bit-form-field class=\"tw-col-span-6\">\n        <bit-label>{{ \"additionalStorageGb\" | i18n }}</bit-label>\n        <input\n          bitInput\n          formControlName=\"additionalStorage\"\n          type=\"number\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <bit-hint>{{\n          \"additionalStorageIntervalDesc\"\n            | i18n: \"1 GB\" : (storageGbPrice | currency: \"$\") : (\"year\" | i18n)\n        }}</bit-hint>\n      </bit-form-field>\n    </div>\n  </bit-section>\n  <bit-section>\n    <h2 bitTypography=\"h2\">{{ \"summary\" | i18n }}</h2>\n    {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n    {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n    {{ storageGbPrice | currency: \"$\" }} =\n    {{ additionalStorageTotal | currency: \"$\" }}\n    <hr class=\"tw-my-3\" />\n  </bit-section>\n  <bit-section>\n    <h3 bitTypography=\"h2\">{{ \"paymentInformation\" | i18n }}</h3>\n    <app-payment [hideBank]=\"true\"></app-payment>\n    <app-tax-info (taxInformationChanged)=\"onTaxInformationChanged()\" />\n    <div id=\"price\" class=\"tw-my-4\">\n      <div class=\"tw-text-muted tw-text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"tw-my-1 tw-w-1/4 tw-ml-0\" />\n      <p bitTypography=\"body1\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n      </p>\n    </div>\n    <p bitTypography=\"body2\">{{ \"paymentChargedAnnually\" | i18n }}</p>\n    <button type=\"submit\" bitButton bitFormButton>\n      {{ \"submit\" | i18n }}\n    </button>\n  </bit-section>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom, Observable, switchMap } from \"rxjs\";\nimport { debounceTime } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AccountService } from \"@bitwarden/common/auth/abstractions/account.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { BillingAccountProfileStateService } from \"@bitwarden/common/billing/abstractions/account/billing-account-profile-state.service\";\nimport { TaxServiceAbstraction } from \"@bitwarden/common/billing/abstractions/tax.service.abstraction\";\nimport { PreviewIndividualInvoiceRequest } from \"@bitwarden/common/billing/models/request/preview-individual-invoice.request\";\nimport { EnvironmentService } from \"@bitwarden/common/platform/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\nimport { ToastService } from \"@bitwarden/components\";\n\nimport { PaymentComponent, TaxInfoComponent } from \"../../shared\";\n\n@Component({\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium$: Observable<boolean>;\n  selfHosted = false;\n  premiumPrice = 10;\n  familyPlanMaxUserCount = 6;\n  storageGbPrice = 4;\n  cloudWebVaultUrl: string;\n  licenseFile: File = null;\n\n  formPromise: Promise<any>;\n  protected licenseForm = new FormGroup({\n    file: new FormControl(null, [Validators.required]),\n  });\n  protected addonForm = new FormGroup({\n    additionalStorage: new FormControl(0, [Validators.max(99), Validators.min(0)]),\n  });\n\n  private estimatedTax: number = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private environmentService: EnvironmentService,\n    private billingAccountProfileStateService: BillingAccountProfileStateService,\n    private toastService: ToastService,\n    private taxService: TaxServiceAbstraction,\n    private accountService: AccountService,\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n    this.canAccessPremium$ = this.accountService.activeAccount$.pipe(\n      switchMap((account) =>\n        this.billingAccountProfileStateService.hasPremiumFromAnySource$(account.id),\n      ),\n    );\n\n    this.addonForm.controls.additionalStorage.valueChanges\n      .pipe(debounceTime(1000), takeUntilDestroyed())\n      .subscribe(() => {\n        this.refreshSalesTax();\n      });\n  }\n  protected setSelectedFile(event: Event) {\n    const fileInputEl = <HTMLInputElement>event.target;\n    const file: File = fileInputEl.files.length > 0 ? fileInputEl.files[0] : null;\n    this.licenseFile = file;\n  }\n  async ngOnInit() {\n    this.cloudWebVaultUrl = await firstValueFrom(this.environmentService.cloudWebVaultUrl$);\n    const account = await firstValueFrom(this.accountService.activeAccount$);\n    if (\n      await firstValueFrom(this.billingAccountProfileStateService.hasPremiumPersonally$(account.id))\n    ) {\n      // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n  submit = async () => {\n    if (this.taxInfoComponent) {\n      if (!this.taxInfoComponent?.taxFormGroup.valid) {\n        this.taxInfoComponent.taxFormGroup.markAllAsTouched();\n        return;\n      }\n    }\n    this.licenseForm.markAllAsTouched();\n    this.addonForm.markAllAsTouched();\n    if (this.selfHosted) {\n      if (this.licenseFile == null) {\n        this.toastService.showToast({\n          variant: \"error\",\n          title: this.i18nService.t(\"errorOccurred\"),\n          message: this.i18nService.t(\"selectFile\"),\n        });\n        return;\n      }\n    }\n\n    if (this.selfHosted) {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      if (!this.tokenService.getEmailVerified()) {\n        this.toastService.showToast({\n          variant: \"error\",\n          title: this.i18nService.t(\"errorOccurred\"),\n          message: this.i18nService.t(\"verifyEmailFirst\"),\n        });\n        return;\n      }\n\n      const fd = new FormData();\n      fd.append(\"license\", this.licenseFile);\n      await this.apiService.postAccountLicense(fd).then(() => {\n        return this.finalizePremium();\n      });\n    } else {\n      await this.paymentComponent\n        .createPaymentToken()\n        .then((result) => {\n          const fd = new FormData();\n          fd.append(\"paymentMethodType\", result[1].toString());\n          if (result[0] != null) {\n            fd.append(\"paymentToken\", result[0]);\n          }\n          fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n          fd.append(\"country\", this.taxInfoComponent?.taxFormGroup?.value.country);\n          fd.append(\"postalCode\", this.taxInfoComponent?.taxFormGroup?.value.postalCode);\n          return this.apiService.postPremium(fd);\n        })\n        .then((paymentResponse) => {\n          if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n            return this.paymentComponent.handleStripeCardPayment(\n              paymentResponse.paymentIntentClientSecret,\n              () => this.finalizePremium(),\n            );\n          } else {\n            return this.finalizePremium();\n          }\n        });\n    }\n  };\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"premiumUpdated\"),\n    });\n    await this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorage(): number {\n    return this.addonForm.get(\"additionalStorage\").value;\n  }\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.estimatedTax;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  private refreshSalesTax(): void {\n    if (!this.taxInfoComponent.country || !this.taxInfoComponent.postalCode) {\n      return;\n    }\n    const request: PreviewIndividualInvoiceRequest = {\n      passwordManager: {\n        additionalStorage: this.addonForm.value.additionalStorage,\n      },\n      taxInformation: {\n        postalCode: this.taxInfoComponent.postalCode,\n        country: this.taxInfoComponent.country,\n      },\n    };\n\n    this.taxService\n      .previewIndividualInvoice(request)\n      .then((invoice) => {\n        this.estimatedTax = invoice.taxAmount;\n      })\n      .catch((error) => {\n        this.toastService.showToast({\n          title: \"\",\n          variant: \"error\",\n          message: this.i18nService.t(error.message),\n        });\n      });\n  }\n\n  protected onTaxInformationChanged(): void {\n    this.refreshSalesTax();\n  }\n}\n","<app-header>\n  <bit-tab-nav-bar slot=\"tabs\" *ngIf=\"!selfHosted\">\n    <bit-tab-link [route]=\"(hasPremium$ | async) ? 'user-subscription' : 'premium'\">{{\n      \"subscription\" | i18n\n    }}</bit-tab-link>\n    <bit-tab-link route=\"payment-method\">{{ \"paymentMethod\" | i18n }}</bit-tab-link>\n    <bit-tab-link route=\"billing-history\">{{ \"billingHistory\" | i18n }}</bit-tab-link>\n  </bit-tab-nav-bar>\n</app-header>\n\n<bit-container>\n  <router-outlet></router-outlet>\n</bit-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnInit } from \"@angular/core\";\nimport { Observable, switchMap } from \"rxjs\";\n\nimport { AccountService } from \"@bitwarden/common/auth/abstractions/account.service\";\nimport { BillingAccountProfileStateService } from \"@bitwarden/common/billing/abstractions/account/billing-account-profile-state.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\n@Component({\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent implements OnInit {\n  hasPremium$: Observable<boolean>;\n  selfHosted: boolean;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    billingAccountProfileStateService: BillingAccountProfileStateService,\n    accountService: AccountService,\n  ) {\n    this.hasPremium$ = accountService.activeAccount$.pipe(\n      switchMap((account) => billingAccountProfileStateService.hasPremiumPersonally$(account.id)),\n    );\n  }\n\n  ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n}\n","<form [formGroup]=\"updateLicenseForm\" [bitSubmit]=\"submitLicenseDialog\">\n  <bit-dialog dialogSize=\"default\" [title]=\"'updateLicense' | i18n\">\n    <ng-container bitDialogContent>\n      <bit-form-field>\n        <bit-label>{{ \"licenseFile\" | i18n }}</bit-label>\n        <div>\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"fileSelector.click()\">\n            {{ \"chooseFile\" | i18n }}\n          </button>\n          {{ licenseFile ? licenseFile.name : (\"noFileChosen\" | i18n) }}\n        </div>\n        <input\n          bitInput\n          #fileSelector\n          type=\"file\"\n          formControlName=\"file\"\n          (change)=\"setSelectedFile($event)\"\n          hidden\n          class=\"tw-hidden\"\n        />\n        <bit-hint>{{ \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\" }}</bit-hint>\n      </bit-form-field>\n    </ng-container>\n    <ng-container bitDialogFooter>\n      <button type=\"submit\" buttonType=\"primary\" bitButton bitFormButton>\n        {{ \"submit\" | i18n }}\n      </button>\n      <button\n        bitButton\n        *ngIf=\"showCancel\"\n        bitFormButton\n        buttonType=\"secondary\"\n        type=\"button\"\n        bitDialogClose\n        [bitAction]=\"cancel\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","import { DialogRef } from \"@angular/cdk/dialog\";\nimport { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\nimport { UpdateLicenseDialogResult } from \"./update-license-types\";\nimport { UpdateLicenseComponent } from \"./update-license.component\";\n\n@Component({\n  templateUrl: \"update-license-dialog.component.html\",\n})\nexport class UpdateLicenseDialogComponent extends UpdateLicenseComponent {\n  constructor(\n    private dialogRef: DialogRef,\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    organizationApiService: OrganizationApiServiceAbstraction,\n    formBuilder: FormBuilder,\n    toastService: ToastService,\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      organizationApiService,\n      formBuilder,\n      toastService,\n    );\n  }\n  async submitLicense() {\n    const result = await this.submit();\n    if (result === UpdateLicenseDialogResult.Updated) {\n      this.dialogRef.close(UpdateLicenseDialogResult.Updated);\n    }\n  }\n\n  submitLicenseDialog = async () => {\n    await this.submitLicense();\n  };\n\n  cancel = async () => {\n    await this.cancel();\n    this.dialogRef.close(UpdateLicenseDialogResult.Cancelled);\n  };\n  static open(dialogService: DialogService) {\n    return dialogService.open<UpdateLicenseDialogResult>(UpdateLicenseDialogComponent);\n  }\n}\n","<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin tw-text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p bitTypography=\"body1\">{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"$any(reinstateBtn).loading\"\n    >\n      {{ \"reinstateSubscription\" | i18n }}\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"tw-flex tw-w-full\" *ngIf=\"!selfHosted\">\n    <div class=\"tw-w-1/3\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"tw-capitalize\">{{ (subscription && subscriptionStatus) || \"-\" }}</span>\n          <span bitBadge variant=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (sub.subscription.periodEndDate | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"tw-w-2/3\" *ngIf=\"subscription\">\n      <strong class=\"!tw-block tw-mb-1\">{{ \"details\" | i18n }}</strong>\n      <bit-table>\n        <ng-template body>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td bitCell>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} &#64;\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td bitCell>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </ng-template>\n      </bit-table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"{{ this.cloudWebVaultUrl }}/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {{ \"launchCloudSubscription\" | i18n }}\n      </a>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"tw-flex tw-justify-between\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"tw-ml-auto\"\n        (click)=\"cancelSubscription()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"$any(cancelBtn).loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        {{ \"cancelSubscription\" | i18n }}\n      </button>\n    </div>\n    <h3 bitTypography=\"h3\" class=\"tw-mt-16\">{{ \"storage\" | i18n }}</h3>\n    <p bitTypography=\"body1\">\n      {{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0 : sub.storageName || \"0 MB\" }}\n    </p>\n    <bit-progress [barWidth]=\"storagePercentage\" bgColor=\"success\" size=\"default\"></bit-progress>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"tw-mt-3\">\n        <div class=\"tw-flex tw-gap-1\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(false)\">\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom, lastValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AccountService } from \"@bitwarden/common/auth/abstractions/account.service\";\nimport { BillingAccountProfileStateService } from \"@bitwarden/common/billing/abstractions/account/billing-account-profile-state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/billing/models/response/subscription.response\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\nimport { ConfigService } from \"@bitwarden/common/platform/abstractions/config/config.service\";\nimport { EnvironmentService } from \"@bitwarden/common/platform/abstractions/environment.service\";\nimport { FileDownloadService } from \"@bitwarden/common/platform/abstractions/file-download/file-download.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\nimport {\n  AdjustStorageDialogV2Component,\n  AdjustStorageDialogV2ResultType,\n} from \"../shared/adjust-storage-dialog/adjust-storage-dialog-v2.component\";\nimport {\n  AdjustStorageDialogResult,\n  openAdjustStorageDialog,\n} from \"../shared/adjust-storage-dialog/adjust-storage-dialog.component\";\nimport {\n  OffboardingSurveyDialogResultType,\n  openOffboardingSurvey,\n} from \"../shared/offboarding-survey.component\";\nimport { UpdateLicenseDialogComponent } from \"../shared/update-license-dialog.component\";\nimport { UpdateLicenseDialogResult } from \"../shared/update-license-types\";\n\n@Component({\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n  cloudWebVaultUrl: string;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  protected deprecateStripeSourcesAPI$ = this.configService.getFeatureFlag$(\n    FeatureFlag.AC2476_DeprecateStripeSourcesAPI,\n  );\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService,\n    private dialogService: DialogService,\n    private environmentService: EnvironmentService,\n    private billingAccountProfileStateService: BillingAccountProfileStateService,\n    private toastService: ToastService,\n    private configService: ConfigService,\n    private accountService: AccountService,\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.cloudWebVaultUrl = await firstValueFrom(this.environmentService.cloudWebVaultUrl$);\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    const userId = await firstValueFrom(this.accountService.activeAccount$);\n    if (\n      await firstValueFrom(this.billingAccountProfileStateService.hasPremiumPersonally$(userId.id))\n    ) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.dialogService.openSimpleDialog({\n      title: { key: \"reinstateSubscription\" },\n      content: { key: \"reinstateConfirmation\" },\n      type: \"warning\",\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.toastService.showToast({\n        variant: \"success\",\n        title: null,\n        message: this.i18nService.t(\"reinstated\"),\n      });\n      // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancelSubscription = async () => {\n    const reference = openOffboardingSurvey(this.dialogService, {\n      data: {\n        type: \"User\",\n      },\n    });\n\n    this.cancelPromise = lastValueFrom(reference.closed);\n\n    const result = await this.cancelPromise;\n\n    if (result === OffboardingSurveyDialogResultType.Closed) {\n      return;\n    }\n\n    await this.load();\n  };\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense = async () => {\n    if (this.loading) {\n      return;\n    }\n    const dialogRef = UpdateLicenseDialogComponent.open(this.dialogService);\n    const result = await lastValueFrom(dialogRef.closed);\n    if (result === UpdateLicenseDialogResult.Updated) {\n      await this.load();\n    }\n  };\n\n  adjustStorage = async (add: boolean) => {\n    const deprecateStripeSourcesAPI = await firstValueFrom(this.deprecateStripeSourcesAPI$);\n\n    if (deprecateStripeSourcesAPI) {\n      const dialogRef = AdjustStorageDialogV2Component.open(this.dialogService, {\n        data: {\n          price: 4,\n          cadence: \"year\",\n          type: add ? \"Add\" : \"Remove\",\n        },\n      });\n\n      const result = await lastValueFrom(dialogRef.closed);\n\n      if (result === AdjustStorageDialogV2ResultType.Submitted) {\n        await this.load();\n      }\n    } else {\n      const dialogRef = openAdjustStorageDialog(this.dialogService, {\n        data: {\n          storageGbPrice: 4,\n          add: add,\n        },\n      });\n      const result = await lastValueFrom(dialogRef.closed);\n      if (result === AdjustStorageDialogResult.Adjusted) {\n        await this.load();\n      }\n    }\n  };\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n\n  get subscriptionStatus(): string | null {\n    if (!this.subscription) {\n      return null;\n    } else {\n      /*\n       Premium users who sign up with PayPal will have their subscription activated by a webhook.\n       This is an arbitrary 15-second grace period where we show their subscription as active rather than\n       incomplete while we wait for our webhook to process the `invoice.created` event.\n      */\n      if (this.subscription.status === \"incomplete\") {\n        const periodStartMS = new Date(this.subscription.periodStartDate).getTime();\n        const nowMS = new Date().getTime();\n        return nowMS - periodStartMS <= 15000\n          ? this.i18nService.t(\"active\")\n          : this.subscription.status;\n      }\n\n      return this.subscription.status;\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { featureFlaggedRoute } from \"@bitwarden/angular/platform/utils/feature-flagged-route\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\n\nimport { PaymentMethodComponent } from \"../shared\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { PremiumV2Component } from \"./premium/premium-v2.component\";\nimport { PremiumComponent } from \"./premium/premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      ...featureFlaggedRoute({\n        defaultComponent: PremiumComponent,\n        flaggedComponent: PremiumV2Component,\n        featureFlag: FeatureFlag.AC2476_DeprecateStripeSourcesAPI,\n        routeOptions: {\n          path: \"premium\",\n          data: { titleId: \"goPremium\" },\n        },\n      }),\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: BillingHistoryViewComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IndividualBillingRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { HeaderModule } from \"../../layouts/header/header.module\";\nimport { BillingSharedModule } from \"../shared\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { IndividualBillingRoutingModule } from \"./individual-billing-routing.module\";\nimport { PremiumV2Component } from \"./premium/premium-v2.component\";\nimport { PremiumComponent } from \"./premium/premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\n@NgModule({\n  imports: [IndividualBillingRoutingModule, BillingSharedModule, HeaderModule],\n  declarations: [\n    SubscriptionComponent,\n    BillingHistoryViewComponent,\n    UserSubscriptionComponent,\n    PremiumComponent,\n    PremiumV2Component,\n  ],\n})\nexport class IndividualBillingModule {}\n"],"names":["load","BillingHistoryViewComponent","constructor","platformUtilsService","router","accountBillingApiService","loading","firstLoaded","openInvoices","paidInvoices","transactions","hasAdditionalHistory","ngOnInit","this","isSelfHost","navigate","openInvoicesPromise","getBillingInvoices","length","id","paidInvoicesPromise","transactionsPromise","getBillingTransactions","createdDate","IndividualSelfHostingLicenseUploaderComponent","apiService","formBuilder","i18nService","syncService","toastService","tokenService","super","onLicenseFileUploaded","submit","formData","FormData","append","formValue","file","postAccountLicense","refreshIdentityToken","fullSync","emit","description","hintFileName","onLicenseFileSelectedChanged","onLicenseFileSelected","onTaxInformationChanged","PremiumV2Component","activatedRoute","billingAccountProfileStateService","configService","environmentService","taxService","accountService","addOnFormGroup","additionalStorage","min","max","licenseFormGroup","required","useLicenseUploaderComponent$","getFeatureFlag$","PM11901_RefactorSelfHostingLicenseUploader","estimatedTax","familyPlanMaxUserCount","premiumPrice","storageGBPrice","finalizeUpgrade","postFinalizeUpgrade","showToast","variant","title","message","t","navigateToSubscriptionPage","relativeTo","event","element","target","value","files","submitPremiumLicense","markAllAsTouched","invalid","getEmailVerified","submitPayment","taxInfoComponent","taxFormGroup","type","token","paymentComponent","tokenize","toString","country","postalCode","postPremium","hasPremiumFromAnyOrganization$","activeAccount$","pipe","switchMap","account","combineLatest","hasPremiumPersonally$","cloudWebVaultUrl$","concatMap","hasPremiumPersonally","cloudWebVaultURL","from","of","subscribe","controls","valueChanges","debounceTime","refreshSalesTax","additionalStorageCost","premiumURL","subtotal","total","request","passwordManager","taxInformation","previewIndividualInvoice","then","invoice","taxAmount","catch","error","setSelectedFile","PremiumComponent","messagingService","selfHosted","storageGbPrice","licenseFile","licenseForm","addonForm","valid","fd","finalizePremium","createPaymentToken","result","paymentResponse","success","paymentIntentClientSecret","handleStripeCardPayment","canAccessPremium$","hasPremiumFromAnySource$","fileInputEl","cloudWebVaultUrl","firstValueFrom","get","additionalStorageTotal","Math","abs","taxCharges","SubscriptionComponent","hasPremium$","UpdateLicenseDialogComponent","dialogRef","organizationApiService","submitLicenseDialog","submitLicense","cancel","close","Cancelled","Updated","open","dialogService","reinstate","updateLicense","downloadLicense","cancelSubscription","adjustStorage","UserSubscriptionComponent","logService","fileDownloadService","deprecateStripeSourcesAPI$","AC2476_DeprecateStripeSourcesAPI","reference","data","cancelPromise","lastValueFrom","closed","Closed","add","A","price","cadence","Submitted","Adjusted","userId","sub","getUserSubscription","openSimpleDialog","key","content","reinstatePromise","postReinstatePremium","e","licenseString","JSON","stringify","license","download","fileName","blobData","subscriptionMarkedForCancel","subscription","cancelled","cancelAtEndDate","nextInvoice","upcomingInvoice","storagePercentage","maxStorageGb","storageGb","toFixed","subscriptionStatus","status","periodStartMS","Date","periodStartDate","getTime","routes","path","component","titleId","children","pathMatch","redirectTo","defaultComponent","flaggedComponent","featureFlag","routeOptions","IndividualBillingRoutingModule","forChild","IndividualBillingModule"],"sourceRoot":""}