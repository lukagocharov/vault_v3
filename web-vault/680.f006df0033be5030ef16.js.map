{"version":3,"file":"680.f006df0033be5030ef16.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/./src/app/billing/shared/adjust-storage-dialog/adjust-storage-dialog-v2.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/adjust-storage-dialog/adjust-storage-dialog-v2.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/offboarding-survey.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/offboarding-survey.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/update-license-types.ts","webpack://@bitwarden/web-vault/./src/app/billing/shared/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/billing/shared/update-license.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/platform/utils/feature-flagged-route.ts"],"sourcesContent":["// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\nexport interface AdjustStorageDialogV2Params {\n  price: number;\n  cadence: \"month\" | \"year\";\n  type: \"Add\" | \"Remove\";\n  organizationId?: string;\n}\n\nexport enum AdjustStorageDialogV2ResultType {\n  Submitted = \"submitted\",\n  Closed = \"closed\",\n}\n\n@Component({\n  templateUrl: \"./adjust-storage-dialog-v2.component.html\",\n})\nexport class AdjustStorageDialogV2Component {\n  protected formGroup = new FormGroup({\n    storage: new FormControl<number>(0, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(99),\n    ]),\n  });\n\n  protected organizationId?: string;\n  protected price: number;\n  protected cadence: \"month\" | \"year\";\n\n  protected title: string;\n  protected body: string;\n  protected storageFieldLabel: string;\n\n  protected ResultType = AdjustStorageDialogV2ResultType;\n\n  constructor(\n    private apiService: ApiService,\n    @Inject(DIALOG_DATA) protected dialogParams: AdjustStorageDialogV2Params,\n    private dialogRef: DialogRef<AdjustStorageDialogV2ResultType>,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private toastService: ToastService,\n  ) {\n    this.price = this.dialogParams.price;\n    this.cadence = this.dialogParams.cadence;\n    this.organizationId = this.dialogParams.organizationId;\n    switch (this.dialogParams.type) {\n      case \"Add\":\n        this.title = this.i18nService.t(\"addStorage\");\n        this.body = this.i18nService.t(\"storageAddNote\");\n        this.storageFieldLabel = this.i18nService.t(\"gbStorageAdd\");\n        break;\n      case \"Remove\":\n        this.title = this.i18nService.t(\"removeStorage\");\n        this.body = this.i18nService.t(\"storageRemoveNote\");\n        this.storageFieldLabel = this.i18nService.t(\"gbStorageRemove\");\n        break;\n    }\n  }\n\n  submit = async () => {\n    const request = new StorageRequest();\n    switch (this.dialogParams.type) {\n      case \"Add\":\n        request.storageGbAdjustment = this.formGroup.value.storage;\n        break;\n      case \"Remove\":\n        request.storageGbAdjustment = this.formGroup.value.storage * -1;\n        break;\n    }\n\n    if (this.organizationId) {\n      await this.organizationApiService.updateStorage(this.organizationId, request);\n    } else {\n      await this.apiService.postAccountStorage(request);\n    }\n\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString()),\n    });\n\n    this.dialogRef.close(this.ResultType.Submitted);\n  };\n\n  static open = (\n    dialogService: DialogService,\n    dialogConfig: DialogConfig<AdjustStorageDialogV2Params>,\n  ) =>\n    dialogService.open<AdjustStorageDialogV2ResultType>(\n      AdjustStorageDialogV2Component,\n      dialogConfig,\n    );\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog [title]=\"title\">\n    <ng-container bitDialogContent>\n      <p bitTypography=\"body1\">{{ body }}</p>\n      <div class=\"tw-grid two-grid-cols-12\">\n        <bit-form-field class=\"tw-col-span-7\">\n          <bit-label>{{ storageFieldLabel }}</bit-label>\n          <input bitInput type=\"number\" formControlName=\"storage\" />\n          <bit-hint *ngIf=\"dialogParams.type === 'Add'\">\n            <!-- Total: 10 GB × $0.50 = $5.00 /month -->\n            <strong>{{ \"total\" | i18n }}</strong>\n            {{ this.formGroup.value.storage }} GB &times; {{ this.price | currency: \"$\" }} =\n            {{ this.price * this.formGroup.value.storage | currency: \"$\" }} /\n            {{ this.cadence | i18n }}\n          </bit-hint>\n        </bit-form-field>\n      </div>\n    </ng-container>\n    <ng-container bitDialogFooter>\n      <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\">\n        {{ \"submit\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        bitButton\n        bitFormButton\n        buttonType=\"secondary\"\n        [bitDialogClose]=\"ResultType.Closed\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","<bit-section>\n  <h3 bitTypography=\"h3\">{{ \"unpaid\" | i18n }} {{ \"invoices\" | i18n }}</h3>\n  <p bitTypography=\"body1\" *ngIf=\"!openInvoices || !openInvoices.length\">\n    {{ \"noUnpaidInvoices\" | i18n }}\n  </p>\n  <bit-table>\n    <ng-template body>\n      <tr bitRow *ngFor=\"let i of openInvoices\">\n        <td bitCell>{{ i.date | date: \"mediumDate\" }}</td>\n        <td bitCell>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            class=\"tw-mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a\n            bitLink\n            href=\"{{ i.url }}\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            title=\"{{ 'viewInvoice' | i18n }}\"\n          >\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td bitCell>{{ i.amount | currency: \"$\" }}</td>\n        <td bitCell class=\"tw-w-28\">\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check tw-text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle tw-text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </ng-template>\n  </bit-table>\n</bit-section>\n<bit-section>\n  <h3 bitTypography=\"h3\">{{ \"paid\" | i18n }} {{ \"invoices\" | i18n }}</h3>\n  <p bitTypography=\"body1\" *ngIf=\"!paidInvoices || !paidInvoices.length\">\n    {{ \"noPaidInvoices\" | i18n }}\n  </p>\n  <bit-table>\n    <ng-template body>\n      <tr bitRow *ngFor=\"let i of paidInvoices\">\n        <td bitCell>{{ i.date | date: \"mediumDate\" }}</td>\n        <td bitCell>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            class=\"tw-mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a\n            bitLink\n            href=\"{{ i.url }}\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            title=\"{{ 'viewInvoice' | i18n }}\"\n          >\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td bitCell>{{ i.amount | currency: \"$\" }}</td>\n        <td bitCell class=\"tw-w-28\">\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check tw-text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle tw-text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </ng-template>\n  </bit-table>\n</bit-section>\n<bit-section>\n  <h3 bitTypography=\"h3\">{{ \"transactions\" | i18n }}</h3>\n  <p bitTypography=\"body1\" *ngIf=\"!transactions || !transactions.length\">\n    {{ \"noTransactions\" | i18n }}\n  </p>\n  <bit-table *ngIf=\"transactions && transactions.length\">\n    <ng-template body>\n      <tr bitRow *ngFor=\"let t of transactions\">\n        <td bitCell>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td bitCell>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td bitCell>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n          bitCell\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </ng-template>\n  </bit-table>\n  <small class=\"tw-text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</bit-section>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType, TransactionType } from \"@bitwarden/common/billing/enums\";\nimport {\n  BillingInvoiceResponse,\n  BillingTransactionResponse,\n} from \"@bitwarden/common/billing/models/response/billing.response\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  openInvoices: BillingInvoiceResponse[];\n\n  @Input()\n  paidInvoices: BillingInvoiceResponse[];\n\n  @Input()\n  transactions: BillingTransactionResponse[];\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\nimport { BillingApiServiceAbstraction as BillingApiService } from \"@bitwarden/common/billing/abstractions/billing-api.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\ntype UserOffboardingParams = {\n  type: \"User\";\n};\n\ntype OrganizationOffboardingParams = {\n  type: \"Organization\";\n  id: string;\n};\n\nexport type OffboardingSurveyDialogParams = UserOffboardingParams | OrganizationOffboardingParams;\n\nexport enum OffboardingSurveyDialogResultType {\n  Closed = \"closed\",\n  Submitted = \"submitted\",\n}\n\ntype Reason = {\n  value: string;\n  text: string;\n};\n\nexport const openOffboardingSurvey = (\n  dialogService: DialogService,\n  dialogConfig: DialogConfig<OffboardingSurveyDialogParams>,\n) =>\n  dialogService.open<OffboardingSurveyDialogResultType, OffboardingSurveyDialogParams>(\n    OffboardingSurveyComponent,\n    dialogConfig,\n  );\n\n@Component({\n  selector: \"app-cancel-subscription-form\",\n  templateUrl: \"offboarding-survey.component.html\",\n})\nexport class OffboardingSurveyComponent {\n  protected ResultType = OffboardingSurveyDialogResultType;\n  protected readonly MaxFeedbackLength = 400;\n\n  protected readonly reasons: Reason[] = [\n    {\n      value: null,\n      text: this.i18nService.t(\"selectPlaceholder\"),\n    },\n    {\n      value: \"missing_features\",\n      text: this.i18nService.t(\"missingFeatures\"),\n    },\n    {\n      value: \"switched_service\",\n      text: this.i18nService.t(\"movingToAnotherTool\"),\n    },\n    {\n      value: \"too_complex\",\n      text: this.i18nService.t(\"tooDifficultToUse\"),\n    },\n    {\n      value: \"unused\",\n      text: this.i18nService.t(\"notUsingEnough\"),\n    },\n    {\n      value: \"too_expensive\",\n      text: this.i18nService.t(\"tooExpensive\"),\n    },\n    {\n      value: \"other\",\n      text: this.i18nService.t(\"other\"),\n    },\n  ];\n\n  protected formGroup = this.formBuilder.group({\n    reason: [this.reasons[0].value, [Validators.required]],\n    feedback: [\"\", [Validators.maxLength(this.MaxFeedbackLength)]],\n  });\n\n  constructor(\n    @Inject(DIALOG_DATA) private dialogParams: OffboardingSurveyDialogParams,\n    private dialogRef: DialogRef<OffboardingSurveyDialogResultType>,\n    private formBuilder: FormBuilder,\n    private billingApiService: BillingApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private toastService: ToastService,\n  ) {}\n\n  submit = async () => {\n    this.formGroup.markAllAsTouched();\n\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const request = {\n      reason: this.formGroup.value.reason,\n      feedback: this.formGroup.value.feedback,\n    };\n\n    this.dialogParams.type === \"Organization\"\n      ? await this.billingApiService.cancelOrganizationSubscription(this.dialogParams.id, request)\n      : await this.billingApiService.cancelPremiumUserSubscription(request);\n\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"canceledSubscription\"),\n    });\n\n    this.dialogRef.close(this.ResultType.Submitted);\n  };\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog>\n    <span bitDialogTitle class=\"tw-font-semibold\">\n      {{ \"cancelSubscription\" | i18n }}\n    </span>\n    <div bitDialogContent>\n      <p>{{ \"sorryToSeeYouGo\" | i18n }}</p>\n      <bit-form-field>\n        <bit-label>\n          {{ \"selectCancellationReason\" | i18n }}\n        </bit-label>\n        <select bitInput formControlName=\"reason\">\n          <option *ngFor=\"let reason of reasons\" [ngValue]=\"reason.value\">\n            {{ reason.text }}\n          </option>\n        </select>\n      </bit-form-field>\n      <bit-form-field>\n        <bit-label>\n          {{ \"anyOtherFeedback\" | i18n }}\n        </bit-label>\n        <textarea rows=\"4\" bitInput formControlName=\"feedback\"></textarea>\n        <bit-hint>{{\n          \"charactersCurrentAndMaximum\" | i18n: formGroup.value.feedback.length : MaxFeedbackLength\n        }}</bit-hint>\n      </bit-form-field>\n    </div>\n    <ng-container bitDialogFooter>\n      <button bitButton bitFormButton buttonType=\"primary\" type=\"submit\">\n        {{ \"cancelSubscription\" | i18n }}\n      </button>\n      <button bitButton buttonType=\"secondary\" type=\"button\" [bitDialogClose]=\"ResultType.Closed\">\n        {{ \"close\" | i18n }}\n      </button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","export enum UpdateLicenseDialogResult {\n  Updated = \"updated\",\n  Cancelled = \"cancelled\",\n}\n","<form [formGroup]=\"updateLicenseForm\" [bitSubmit]=\"submit\">\n  <bit-form-field>\n    <bit-label *ngIf=\"showAutomaticSyncAndManualUpload\">{{ \"licenseFile\" | i18n }}</bit-label>\n    <div class=\"tw-pb-1 tw-pt-2\">\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"fileSelector.click()\">\n        {{ \"chooseFile\" | i18n }}\n      </button>\n      {{ this.licenseFile ? this.licenseFile.name : (\"noFileChosen\" | i18n) }}\n    </div>\n    <input\n      bitInput\n      #fileSelector\n      type=\"file\"\n      formControlName=\"file\"\n      (change)=\"setSelectedFile($event)\"\n      hidden\n      class=\"tw-hidden\"\n    />\n    <bit-hint>{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</bit-hint>\n  </bit-form-field>\n  <button type=\"submit\" buttonType=\"primary\" bitButton bitFormButton>\n    {{ \"submit\" | i18n }}\n  </button>\n  <button\n    bitButton\n    *ngIf=\"showCancel\"\n    bitFormButton\n    buttonType=\"secondary\"\n    type=\"button\"\n    [bitAction]=\"cancel\"\n  >\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { ProductTierType } from \"@bitwarden/common/billing/enums\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { ToastService } from \"@bitwarden/components\";\n\nimport { UpdateLicenseDialogResult } from \"./update-license-types\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() showCancel = true;\n  @Input() showAutomaticSyncAndManualUpload: boolean;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n  title: string = this.i18nService.t(\"updateLicense\");\n  updateLicenseForm = this.formBuilder.group({\n    file: [null],\n  });\n  licenseFile: File = null;\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private formBuilder: FormBuilder,\n    private toastService: ToastService,\n  ) {}\n  async ngOnInit() {\n    const org = await this.organizationApiService.get(this.organizationId);\n    if (org.plan.productTier !== ProductTierType.Families) {\n      this.updateLicenseForm.setValidators([Validators.required]);\n      this.updateLicenseForm.updateValueAndValidity();\n    }\n  }\n  protected setSelectedFile(event: Event) {\n    const fileInputEl = <HTMLInputElement>event.target;\n    const file: File = fileInputEl.files.length > 0 ? fileInputEl.files[0] : null;\n    this.licenseFile = file;\n  }\n  submit = async () => {\n    this.updateLicenseForm.markAllAsTouched();\n    if (this.updateLicenseForm.invalid) {\n      return;\n    }\n    const files = this.licenseFile;\n    if (files == null) {\n      this.toastService.showToast({\n        variant: \"error\",\n        title: this.i18nService.t(\"errorOccurred\"),\n        message: this.i18nService.t(\"selectFile\"),\n      });\n      return;\n    }\n    const fd = new FormData();\n    fd.append(\"license\", files);\n\n    let updatePromise: Promise<void | unknown> = null;\n    if (this.organizationId == null) {\n      updatePromise = this.apiService.postAccountLicense(fd);\n    } else {\n      updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n    }\n\n    this.formPromise = updatePromise.then(() => {\n      return this.apiService.refreshIdentityToken();\n    });\n\n    await this.formPromise;\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"licenseUploadSuccess\"),\n    });\n    this.onUpdated.emit();\n    return new Promise((resolve) => resolve(UpdateLicenseDialogResult.Updated));\n  };\n\n  cancel = () => {\n    this.onCanceled.emit();\n  };\n}\n","import { Type, inject } from \"@angular/core\";\nimport { Route, Routes } from \"@angular/router\";\nimport { map } from \"rxjs\";\n\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\nimport { ConfigService } from \"@bitwarden/common/platform/abstractions/config/config.service\";\n\nimport { componentRouteSwap } from \"../../utils/component-route-swap\";\n\n/**\n * @param defaultComponent The component to be used when the feature flag is off.\n * @param flaggedComponent The component to be used when the feature flag is on.\n * @param featureFlag The feature flag to evaluate\n * @param routeOptions The shared route options to apply to both components.\n */\ntype FeatureFlaggedRouteConfig = {\n  defaultComponent: Type<any>;\n  flaggedComponent: Type<any>;\n  featureFlag: FeatureFlag;\n  routeOptions: Omit<Route, \"component\">;\n};\n\n/**\n * Swap between two routes at runtime based on the value of a feature flag.\n * The routes share a common path and configuration but load different components.\n * @param config See {@link FeatureFlaggedRouteConfig}\n * @returns A tuple containing the conditional configuration for the two routes. This should be unpacked into your existing Routes array.\n * @example\n * const routes: Routes = [\n *   ...featureFlaggedRoute({\n *      defaultComponent: GroupsComponent,\n *      flaggedComponent: GroupsNewComponent,\n *      featureFlag: FeatureFlag.GroupsComponentRefactor,\n *      routeOptions: {\n *        path: \"groups\",\n *        canActivate: [OrganizationPermissionsGuard],\n *      },\n *   }),\n * ]\n */\nexport function featureFlaggedRoute(config: FeatureFlaggedRouteConfig): Routes {\n  const canMatch$ = () =>\n    inject(ConfigService)\n      .getFeatureFlag$(config.featureFlag)\n      .pipe(map((flagValue) => flagValue === true));\n\n  return componentRouteSwap(\n    config.defaultComponent,\n    config.flaggedComponent,\n    canMatch$,\n    config.routeOptions,\n  );\n}\n"],"names":["AdjustStorageDialogV2ResultType","AdjustStorageDialogV2Component","constructor","apiService","dialogParams","dialogRef","i18nService","organizationApiService","toastService","formGroup","storage","required","min","max","ResultType","submit","request","this","type","storageGbAdjustment","value","organizationId","updateStorage","postAccountStorage","showToast","variant","title","message","t","toString","close","Submitted","price","cadence","body","storageFieldLabel","open","dialogService","dialogConfig","BillingHistoryComponent","paymentMethodType","transactionType","paymentMethodClasses","Card","BankAccount","WireTransfer","BitPay","PayPal","OffboardingSurveyDialogResultType","openOffboardingSurvey","OffboardingSurveyComponent","formBuilder","billingApiService","platformUtilsService","MaxFeedbackLength","reasons","text","group","reason","feedback","maxLength","markAllAsTouched","invalid","cancelOrganizationSubscription","id","cancelPremiumUserSubscription","UpdateLicenseDialogResult","UpdateLicenseComponent","showCancel","onUpdated","onCanceled","updateLicenseForm","file","licenseFile","files","fd","FormData","append","updatePromise","postAccountLicense","updateLicense","formPromise","then","refreshIdentityToken","emit","Promise","resolve","Updated","cancel","ngOnInit","get","plan","productTier","Families","setValidators","updateValueAndValidity","setSelectedFile","event","fileInputEl","target","length","featureFlaggedRoute","config","defaultComponent","flaggedComponent","getFeatureFlag$","featureFlag","pipe","flagValue","routeOptions"],"sourceRoot":""}