{"version":3,"file":"982.74e3b99c39e6db3490fb.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/./src/app/billing/guards/organization-is-unmanaged.guard.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-history-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/admin-console/models/request/organization-api-key.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/icons/subscription-hidden.icon.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/organization-subscription-update.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/change-plan.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/organization-sm-subscription-update.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-adjust-subscription.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/sm-subscribe.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-subscribe-standalone.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/sm-subscribe-standalone.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/subscription-status.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/subscription-status.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-cloud.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-cloud.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/api/billing-sync-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/view/self-hosted-organization-subscription.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/admin-console/models/request/organization-connection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/billing/models/request/billing-sync-config.request.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/billing-sync-key.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/subscription-hidden.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-selfhost.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-subscription-selfhost.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/payment-method/organization-payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/billing/organizations/payment-method/organization-payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/billing/organizations/organization-billing.module.ts"],"sourcesContent":["import { inject } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivateFn } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { ProviderService } from \"@bitwarden/common/admin-console/abstractions/provider.service\";\nimport { ProviderStatusType } from \"@bitwarden/common/admin-console/enums\";\n\nexport const organizationIsUnmanaged: CanActivateFn = async (route: ActivatedRouteSnapshot) => {\n  const organizationService = inject(OrganizationService);\n  const providerService = inject(ProviderService);\n\n  const organization = await organizationService.get(route.params.organizationId);\n\n  if (!organization.hasProvider) {\n    return true;\n  }\n\n  const provider = await providerService.get(organization.providerId);\n\n  if (!provider) {\n    return true;\n  }\n\n  return provider.providerStatus !== ProviderStatusType.Billable;\n};\n","<app-header> </app-header>\n\n<bit-container>\n  <ng-container *ngIf=\"!firstLoaded && loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin tw-text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"openInvoices || paidInvoices || transactions\">\n    <app-billing-history\n      [openInvoices]=\"openInvoices\"\n      [paidInvoices]=\"paidInvoices\"\n      [transactions]=\"transactions\"\n    ></app-billing-history>\n    <button\n      type=\"button\"\n      bitButton\n      buttonType=\"secondary\"\n      (click)=\"load()\"\n      *ngIf=\"hasAdditionalHistory\"\n    >\n      {{ \"loadMore\" | i18n }}\n    </button>\n  </ng-container>\n</bit-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { OrganizationBillingApiServiceAbstraction } from \"@bitwarden/common/billing/abstractions/organizations/organization-billing-api.service.abstraction\";\nimport {\n  BillingInvoiceResponse,\n  BillingTransactionResponse,\n} from \"@bitwarden/common/billing/models/response/billing.response\";\n\n@Component({\n  templateUrl: \"organization-billing-history-view.component.html\",\n})\nexport class OrgBillingHistoryViewComponent implements OnInit, OnDestroy {\n  loading = false;\n  firstLoaded = false;\n  openInvoices: BillingInvoiceResponse[] = [];\n  paidInvoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n  organizationId: string;\n  hasAdditionalHistory: boolean = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private organizationBillingApiService: OrganizationBillingApiServiceAbstraction,\n    private route: ActivatedRoute,\n  ) {}\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n          this.firstLoaded = true;\n        }),\n        takeUntil(this.destroy$),\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n\n    /* disable billing history\n    const openInvoicesPromise = this.organizationBillingApiService.getBillingInvoices(\n      this.organizationId,\n      \"open\",\n      this.openInvoices.length > 0 ? this.openInvoices[this.openInvoices.length - 1].id : null,\n    );\n\n    const paidInvoicesPromise = this.organizationBillingApiService.getBillingInvoices(\n      this.organizationId,\n      \"paid\",\n      this.paidInvoices.length > 0 ? this.paidInvoices[this.paidInvoices.length - 1].id : null,\n    );\n\n    const transactionsPromise = this.organizationBillingApiService.getBillingTransactions(\n      this.organizationId,\n      this.transactions.length > 0\n        ? this.transactions[this.transactions.length - 1].createdDate\n        : null,\n    );\n\n    const openInvoices = await openInvoicesPromise;\n    const paidInvoices = await paidInvoicesPromise;\n    const transactions = await transactionsPromise;\n\n    const pageSize = 5;\n\n    this.openInvoices = [...this.openInvoices, ...openInvoices];\n    this.paidInvoices = [...this.paidInvoices, ...paidInvoices];\n    this.transactions = [...this.transactions, ...transactions];\n\n    this.hasAdditionalHistory =\n      openInvoices.length <= pageSize ||\n      paidInvoices.length <= pageSize ||\n      transactions.length <= pageSize;\n    */\n\n    this.loading = false;\n  }\n}\n","import { SecretVerificationRequest } from \"../../../auth/models/request/secret-verification.request\";\nimport { OrganizationApiKeyType } from \"../../enums\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog>\n    <span bitDialogTitle>\n      {{ (hasBillingToken ? \"viewBillingToken\" : \"generateBillingToken\") | i18n }}\n    </span>\n    <div bitDialogContent>\n      <app-user-verification formControlName=\"verification\" *ngIf=\"!clientSecret\">\n      </app-user-verification>\n\n      <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n        <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n        <bit-callout type=\"warning\">\n          {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n        </bit-callout>\n      </ng-container>\n\n      <div *ngIf=\"clientSecret && !showRotateScreen\">\n        <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n        <bit-form-field>\n          <bit-label>{{ \"billingSyncKey\" | i18n }}</bit-label>\n          <input\n            bitInput\n            id=\"clientSecret\"\n            type=\"text\"\n            [value]=\"clientSecret\"\n            class=\"tw-font-mono\"\n            disabled\n          />\n          <button\n            bitIconButton=\"bwi-clone\"\n            bitSuffix\n            type=\"button\"\n            showToast\n            [valueLabel]=\"'billingSyncKey' | i18n\"\n            [appCopyClick]=\"clientSecret\"\n            [appA11yTitle]=\"'copyValue' | i18n\"\n          ></button>\n        </bit-form-field>\n        <div class=\"tw-mt-2 tw-text-sm tw-text-muted\" *ngIf=\"showLastSyncText\">\n          <b class=\"tw-font-semibold\">{{ \"lastSync\" | i18n }}:</b>\n          {{ lastSyncDate | date: \"medium\" }}\n        </div>\n        <div class=\"tw-mt-2 tw-text-sm tw-text-danger\" *ngIf=\"showAwaitingSyncText\">\n          <i class=\"bwi bwi-error\"></i>\n          {{\n            (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\") | i18n: daysBetween\n          }}\n        </div>\n      </div>\n    </div>\n    <ng-container bitDialogFooter>\n      <button\n        type=\"submit\"\n        bitButton\n        bitFormButton\n        buttonType=\"primary\"\n        *ngIf=\"!clientSecret || showRotateScreen\"\n      >\n        {{ submitButtonText }}\n      </button>\n      <button bitButton bitDialogClose type=\"button\" *ngIf=\"!showRotateScreen\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button bitButton type=\"button\" *ngIf=\"showRotateScreen\" (click)=\"cancelRotate()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        bitButton\n        type=\"button\"\n        *ngIf=\"clientSecret && !showRotateScreen\"\n        (click)=\"rotateToken()\"\n      >\n        {{ \"rotateToken\" | i18n }}\n      </button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/admin-console/enums\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/admin-console/models/request/organization-api-key.request\";\nimport { UserVerificationService } from \"@bitwarden/common/auth/abstractions/user-verification/user-verification.service.abstraction\";\nimport { ApiKeyResponse } from \"@bitwarden/common/auth/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/auth/types/verification\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\nexport interface BillingSyncApiModalData {\n  organizationId: string;\n  hasBillingToken: boolean;\n}\n\n@Component({\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  protected organizationId: string;\n  protected hasBillingToken: boolean;\n\n  protected formGroup = new FormGroup({\n    verification: new FormControl<Verification>(null, Validators.required),\n  });\n\n  showRotateScreen: boolean;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date;\n\n  constructor(\n    @Inject(DIALOG_DATA) protected data: BillingSyncApiModalData,\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private logService: LogService,\n    private toastService: ToastService,\n  ) {\n    this.organizationId = data.organizationId;\n    this.hasBillingToken = data.hasBillingToken;\n  }\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  submit = async () => {\n    try {\n      const request = this.userVerificationService\n        .buildRequest(this.formGroup.value.verification, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return request;\n        });\n\n      if (this.showRotateScreen) {\n        const response = await request.then((request) => {\n          return this.organizationApiService.rotateApiKey(this.organizationId, request);\n        });\n        await this.load(response);\n        this.showRotateScreen = false;\n        this.toastService.showToast({\n          variant: \"success\",\n          title: null,\n          message: this.i18nService.t(\"billingSyncApiKeyRotated\"),\n        });\n      } else {\n        const response = await request.then((request) => {\n          return this.organizationApiService.getOrCreateApiKey(this.organizationId, request);\n        });\n        await this.load(response);\n      }\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  };\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n\n  static open(dialogService: DialogService, data: BillingSyncApiModalData) {\n    return dialogService.open(BillingSyncApiKeyComponent, { data });\n  }\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { DialogConfig, DIALOG_DATA, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { FileDownloadService } from \"@bitwarden/common/platform/abstractions/file-download/file-download.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport enum DownloadLicenseDialogResult {\n  Cancelled = \"cancelled\",\n  Downloaded = \"downloaded\",\n}\ntype DownloadLicenseDialogData = {\n  /** current organization id */\n  organizationId: string;\n};\n\n@Component({\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenceDialogComponent {\n  licenseForm = this.formBuilder.group({\n    installationId: [\"\", [Validators.required]],\n  });\n  constructor(\n    @Inject(DIALOG_DATA) protected data: DownloadLicenseDialogData,\n    private dialogRef: DialogRef,\n    private fileDownloadService: FileDownloadService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    protected formBuilder: FormBuilder,\n  ) {}\n\n  submit = async () => {\n    this.licenseForm.markAllAsTouched();\n    const installationId = this.licenseForm.get(\"installationId\").value;\n    if (installationId == null || installationId === \"\") {\n      return;\n    }\n    const license = await this.organizationApiService.getLicense(\n      this.data.organizationId,\n      installationId,\n    );\n    const licenseString = JSON.stringify(license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_organization_license.json\",\n      blobData: licenseString,\n    });\n    this.dialogRef.close(DownloadLicenseDialogResult.Downloaded);\n  };\n  /**\n   * Strongly typed helper to open a DownloadLicenceDialogComponent\n   * @param dialogService Instance of the dialog service that will be used to open the dialog\n   * @param config Configuration for the dialog\n   */\n  static open(dialogService: DialogService, config: DialogConfig<DownloadLicenseDialogData>) {\n    return dialogService.open<DownloadLicenseDialogResult>(DownloadLicenceDialogComponent, config);\n  }\n  cancel = () => {\n    this.dialogRef.close(DownloadLicenseDialogResult.Cancelled);\n  };\n}\n","<form [formGroup]=\"licenseForm\" [bitSubmit]=\"submit\">\n  <bit-dialog>\n    <span bitDialogTitle>{{ \"downloadLicense\" | i18n }}</span>\n    <ng-container bitDialogContent>\n      <div class=\"tw-grid tw-grid-cols-12 tw-gap-4\">\n        <div class=\"tw-col-span-8\">\n          <bit-form-field>\n            <bit-label\n              >{{ \"enterInstallationId\" | i18n }}\n              <a\n                bitLink\n                class=\"tw-ml-auto\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n                slot=\"end\"\n              >\n                <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n              </a>\n            </bit-label>\n            <input type=\"text\" bitInput formControlName=\"installationId\" />\n          </bit-form-field>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container bitDialogFooter>\n      <button bitButton bitFormButton buttonType=\"primary\" type=\"submit\">\n        {{ \"submit\" | i18n }}\n      </button>\n      <button bitButton [bitAction]=\"cancel\" bitFormButton buttonType=\"secondary\" type=\"button\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","import { Icon, svgIcon } from \"@bitwarden/components\";\n\nexport const SubscriptionHiddenIcon: Icon = svgIcon`\n<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n</svg>\n`;\n","export class OrganizationSubscriptionUpdateRequest {\n  /**\n   * The number of seats to add or remove from the subscription.\n   * Applies to both PM and SM request types.\n   */\n  seatAdjustment: number;\n\n  /**\n   * The maximum number of seats that can be auto-scaled for the subscription.\n   * Applies to both PM and SM request types.\n   */\n  maxAutoscaleSeats?: number;\n\n  /**\n   * Build a subscription update request for the Password Manager product type.\n   * @param seatAdjustment - The number of seats to add or remove from the subscription.\n   * @param maxAutoscaleSeats - The maximum number of seats that can be auto-scaled for the subscription.\n   */\n  constructor(seatAdjustment: number, maxAutoscaleSeats?: number) {\n    this.seatAdjustment = seatAdjustment;\n    this.maxAutoscaleSeats = maxAutoscaleSeats;\n  }\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { InternalOrganizationServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationData } from \"@bitwarden/common/admin-console/models/data/organization.data\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/billing/models/request/organization-subscription-update.request\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { ToastService } from \"@bitwarden/components\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription implements OnInit, OnDestroy {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  private destroy$ = new Subject<void>();\n\n  adjustSubscriptionForm = this.formBuilder.group({\n    newSeatCount: [0, [Validators.min(0)]],\n    limitSubscription: [false],\n    newMaxSeats: [0, [Validators.min(0)]],\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private formBuilder: FormBuilder,\n    private toastService: ToastService,\n    private internalOrganizationService: InternalOrganizationServiceAbstraction,\n  ) {}\n\n  ngOnInit() {\n    this.adjustSubscriptionForm.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((value) => {\n      const maxAutoscaleSeatsControl = this.adjustSubscriptionForm.controls.newMaxSeats;\n\n      if (value.limitSubscription) {\n        maxAutoscaleSeatsControl.setValidators([Validators.min(value.newSeatCount)]);\n        maxAutoscaleSeatsControl.enable({ emitEvent: false });\n      } else {\n        maxAutoscaleSeatsControl.disable({ emitEvent: false });\n      }\n    });\n\n    this.adjustSubscriptionForm.patchValue({\n      newSeatCount: this.currentSeatCount,\n      newMaxSeats: this.maxAutoscaleSeats,\n      limitSubscription: this.maxAutoscaleSeats != null,\n    });\n  }\n\n  submit = async () => {\n    this.adjustSubscriptionForm.markAllAsTouched();\n    if (this.adjustSubscriptionForm.invalid) {\n      return;\n    }\n    const request = new OrganizationSubscriptionUpdateRequest(\n      this.additionalSeatCount,\n      this.adjustSubscriptionForm.value.newMaxSeats,\n    );\n\n    const response = await this.organizationApiService.updatePasswordManagerSeats(\n      this.organizationId,\n      request,\n    );\n\n    const organization = await this.internalOrganizationService.get(this.organizationId);\n\n    const organizationData = new OrganizationData(response, {\n      isMember: organization.isMember,\n      isProviderUser: organization.isProviderUser,\n    });\n\n    await this.internalOrganizationService.upsert(organizationData);\n\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"subscriptionUpdated\"),\n    });\n\n    this.onAdjusted.emit();\n  };\n\n  limitSubscriptionChanged() {\n    if (!this.adjustSubscriptionForm.value.limitSubscription) {\n      this.adjustSubscriptionForm.value.newMaxSeats = null;\n    }\n  }\n\n  get additionalSeatCount(): number {\n    return this.adjustSubscriptionForm.value.newSeatCount\n      ? this.adjustSubscriptionForm.value.newSeatCount - this.currentSeatCount\n      : 0;\n  }\n\n  get maxSeatTotal(): number {\n    return Math.abs((this.adjustSubscriptionForm.value.newMaxSeats ?? 0) * this.seatPrice);\n  }\n\n  get seatTotalCost(): number {\n    return Math.abs(this.adjustSubscriptionForm.value.newSeatCount * this.seatPrice);\n  }\n\n  get limitSubscription(): boolean {\n    return this.adjustSubscriptionForm.value.limitSubscription;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<form [formGroup]=\"adjustSubscriptionForm\" [bitSubmit]=\"submit\">\n  <div class=\"tw-grid tw-grid-cols-12 tw-gap-4\">\n    <div class=\"tw-col-span-8\">\n      <bit-form-field>\n        <bit-label>{{ \"subscriptionSeats\" | i18n }}</bit-label>\n        <input bitInput formControlName=\"newSeatCount\" type=\"number\" min=\"0\" step=\"1\" />\n        <bit-hint>\n          <strong>{{ \"total\" | i18n }}:</strong>\n          {{ adjustSubscriptionForm.value.newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ seatTotalCost | currency: \"$\" }} /\n          {{ interval | i18n }}</bit-hint\n        >\n      </bit-form-field>\n    </div>\n  </div>\n  <div>\n    <bit-form-control>\n      <input\n        bitCheckbox\n        formControlName=\"limitSubscription\"\n        type=\"checkbox\"\n        (change)=\"limitSubscriptionChanged()\"\n      />\n      <bit-label>{{ \"limitSubscription\" | i18n }}</bit-label>\n      <bit-hint> {{ \"limitSubscriptionDesc\" | i18n }}</bit-hint>\n    </bit-form-control>\n  </div>\n  <div\n    class=\"tw-grid tw-grid-cols-12 tw-gap-4 tw-mb-4\"\n    [hidden]=\"!adjustSubscriptionForm.value.limitSubscription\"\n  >\n    <div class=\"tw-col-span-8\">\n      <bit-form-field>\n        <bit-label>{{ \"maxSeatLimit\" | i18n }}</bit-label>\n        <input\n          bitInput\n          formControlName=\"newMaxSeats\"\n          type=\"number\"\n          [min]=\"\n            adjustSubscriptionForm.value.newSeatCount == null\n              ? 1\n              : adjustSubscriptionForm.value.newSeatCount\n          \"\n          step=\"1\"\n        />\n        <bit-hint>\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong>\n          {{ adjustSubscriptionForm.value.newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}</bit-hint\n        >\n      </bit-form-field>\n    </div>\n  </div>\n  <button bitButton buttonType=\"primary\" bitFormButton type=\"submit\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ProductTierType } from \"@bitwarden/common/billing/enums\";\nimport { PlanResponse } from \"@bitwarden/common/billing/models/response/plan.response\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Input() currentPlan: PlanResponse;\n  @Input() preSelectedProductTier: ProductTierType;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div\n  class=\"tw-relative tw-flex tw-flex-col tw-min-w-0 tw-rounded tw-border tw-border-solid tw-border-secondary-300\"\n>\n  <div class=\"tw-flex-auto tw-p-5\">\n    <button\n      bitIconButton=\"bwi-close\"\n      buttonType=\"main\"\n      type=\"button\"\n      size=\"small\"\n      class=\"tw-float-right\"\n      appA11yTitle=\"{{ 'cancel' | i18n }}\"\n      (click)=\"cancel()\"\n    ></button>\n    <h2 bitTypography=\"h2\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p bitTypography=\"body1\" class=\"tw-mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [organizationId]=\"organizationId\"\n      [currentPlan]=\"currentPlan\"\n      [preSelectedProductTier]=\"preSelectedProductTier\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nexport class OrganizationSmSubscriptionUpdateRequest {\n  /**\n   * The number of seats to add or remove from the subscription.\n   */\n  seatAdjustment: number;\n\n  /**\n   * The maximum number of seats that can be auto-scaled for the subscription.\n   */\n  maxAutoscaleSeats?: number;\n\n  /**\n   * The number of additional service accounts to add or remove from the subscription.\n   */\n  serviceAccountAdjustment: number;\n\n  /**\n   * The maximum number of additional service accounts that can be auto-scaled for the subscription.\n   */\n  maxAutoscaleServiceAccounts?: number;\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-form-field class=\"tw-w-2/3\">\n    <bit-label>{{ \"subscriptionSeats\" | i18n }}</bit-label>\n    <input bitInput id=\"smSeatCount\" formControlName=\"seatCount\" type=\"number\" step=\"1\" min=\"1\" />\n    <bit-hint>\n      <strong>{{ \"total\" | i18n }}:</strong>\n      {{ formGroup.value.seatCount || 0 }} &times; {{ options.seatPrice | currency: \"$\" }} =\n      {{ seatTotalCost | currency: \"$\" }} / {{ options.interval | i18n }}\n    </bit-hint>\n  </bit-form-field>\n  <bit-form-control>\n    <bit-label>{{ \"limitSubscription\" | i18n }}</bit-label>\n    <input type=\"checkbox\" bitCheckbox id=\"limitSmSeats\" formControlName=\"limitSeats\" />\n    <bit-hint>\n      {{ \"limitSmSubscriptionDesc\" | i18n }}\n    </bit-hint>\n  </bit-form-control>\n  <bit-form-field class=\"tw-w-2/3\" *ngIf=\"formGroup.value.limitSeats\">\n    <bit-label>{{ \"maxSeatLimit\" | i18n }}</bit-label>\n    <input\n      bitInput\n      id=\"smSeatLimit\"\n      formControlName=\"maxAutoscaleSeats\"\n      type=\"number\"\n      step=\"1\"\n      [min]=\"formGroup.value.seatCount\"\n    />\n    <bit-hint>\n      <strong>{{ \"maxSeatCost\" | i18n }}:</strong>\n      {{ formGroup.value.maxAutoscaleSeats || 0 }} &times; {{ options.seatPrice | currency: \"$\" }} =\n      {{ maxSeatTotalCost | currency: \"$\" }} /\n      {{ options.interval | i18n }}\n    </bit-hint>\n  </bit-form-field>\n  <bit-form-field class=\"tw-w-2/3\">\n    <bit-label>{{ \"additionalMachineAccounts\" | i18n }}</bit-label>\n    <input\n      bitInput\n      id=\"additionalServiceAccountCount\"\n      formControlName=\"additionalServiceAccounts\"\n      type=\"number\"\n      step=\"1\"\n      min=\"0\"\n    />\n    <bit-hint>\n      <div>\n        {{ \"includedMachineAccounts\" | i18n: options.baseServiceAccountCount }}\n        {{ \"addAdditionalMachineAccounts\" | i18n: (monthlyServiceAccountPrice | currency: \"$\") }}\n      </div>\n      <div>\n        <strong>{{ \"total\" | i18n }}:</strong>\n        {{ formGroup.value.additionalServiceAccounts || 0 }} &times;\n        {{ options.additionalServiceAccountPrice | currency: \"$\" }} =\n        {{ serviceAccountTotalCost | currency: \"$\" }} / {{ options.interval | i18n }}\n      </div>\n    </bit-hint>\n  </bit-form-field>\n  <bit-form-control>\n    <bit-label>{{ \"limitMachineAccounts\" | i18n }}</bit-label>\n    <input\n      type=\"checkbox\"\n      bitCheckbox\n      id=\"limitServiceAccounts\"\n      formControlName=\"limitServiceAccounts\"\n    />\n    <bit-hint>\n      {{ \"limitMachineAccountsDesc\" | i18n }}\n    </bit-hint>\n  </bit-form-control>\n  <bit-form-field class=\"tw-w-2/3\" *ngIf=\"formGroup.value.limitServiceAccounts\">\n    <bit-label>{{ \"machineAccountLimit\" | i18n }}</bit-label>\n    <input\n      bitInput\n      id=\"additionalServiceAccountLimit\"\n      formControlName=\"maxAutoscaleServiceAccounts\"\n      type=\"number\"\n      step=\"1\"\n      [min]=\"formGroup.value.additionalServiceAccounts\"\n    />\n    <bit-hint>\n      <div>\n        {{ \"includedMachineAccounts\" | i18n: options.baseServiceAccountCount }}\n      </div>\n      <strong>{{ \"maxMachineAccountCost\" | i18n }}:</strong>\n      {{ maxAdditionalServiceAccounts }} &times;\n      {{ options.additionalServiceAccountPrice | currency: \"$\" }} =\n      {{ maxServiceAccountTotalCost | currency: \"$\" }} / {{ options.interval | i18n }}\n    </bit-hint>\n  </bit-form-field>\n  <button type=\"submit\" bitButton buttonType=\"primary\" bitFormButton>\n    {{ \"save\" | i18n }}\n  </button>\n  <bit-error-summary [formGroup]=\"formGroup\" class=\"tw-mt-2\"></bit-error-summary>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { InternalOrganizationServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationData } from \"@bitwarden/common/admin-console/models/data/organization.data\";\nimport { OrganizationSmSubscriptionUpdateRequest } from \"@bitwarden/common/billing/models/request/organization-sm-subscription-update.request\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { ToastService } from \"@bitwarden/components\";\n\nexport interface SecretsManagerSubscriptionOptions {\n  interval: \"year\" | \"month\";\n\n  /**\n   * The current number of seats the organization subscribes to.\n   */\n  seatCount: number;\n\n  /**\n   * Optional auto-scaling limit for the number of seats the organization can subscribe to.\n   */\n  maxAutoscaleSeats: number;\n\n  /**\n   * The price per seat for the subscription.\n   */\n  seatPrice: number;\n\n  /**\n   * The number of service accounts that are included in the base subscription.\n   */\n  baseServiceAccountCount: number;\n\n  /**\n   * The current number of additional service accounts the organization subscribes to.\n   */\n  additionalServiceAccounts: number;\n\n  /**\n   * Optional auto-scaling limit for the number of additional service accounts the organization can subscribe to.\n   */\n  maxAutoscaleServiceAccounts: number;\n\n  /**\n   * The price per additional service account for the subscription.\n   */\n  additionalServiceAccountPrice: number;\n}\n\n@Component({\n  selector: \"app-sm-adjust-subscription\",\n  templateUrl: \"sm-adjust-subscription.component.html\",\n})\nexport class SecretsManagerAdjustSubscriptionComponent implements OnInit, OnDestroy {\n  @Input() organizationId: string;\n  @Input() options: SecretsManagerSubscriptionOptions;\n  @Output() onAdjusted = new EventEmitter();\n\n  private destroy$ = new Subject<void>();\n\n  formGroup = this.formBuilder.group({\n    seatCount: [0, [Validators.required, Validators.min(1)]],\n    limitSeats: [false],\n    maxAutoscaleSeats: [null as number | null],\n    additionalServiceAccounts: [0, [Validators.required, Validators.min(0)]],\n    limitServiceAccounts: [false],\n    maxAutoscaleServiceAccounts: [null as number | null],\n  });\n\n  get monthlyServiceAccountPrice(): number {\n    return this.options.interval == \"month\"\n      ? this.options.additionalServiceAccountPrice\n      : this.options.additionalServiceAccountPrice / 12;\n  }\n\n  get serviceAccountTotalCost(): number {\n    return Math.abs(\n      this.formGroup.value.additionalServiceAccounts * this.options.additionalServiceAccountPrice,\n    );\n  }\n\n  get seatTotalCost(): number {\n    return Math.abs(this.formGroup.value.seatCount * this.options.seatPrice);\n  }\n\n  get maxAdditionalServiceAccounts(): number {\n    const maxTotalServiceAccounts = this.formGroup.value.maxAutoscaleServiceAccounts ?? 0;\n    return Math.max(0, maxTotalServiceAccounts - this.options.baseServiceAccountCount);\n  }\n\n  get maxServiceAccountTotalCost(): number {\n    return this.maxAdditionalServiceAccounts * this.options.additionalServiceAccountPrice;\n  }\n\n  get maxSeatTotalCost(): number {\n    return Math.abs((this.formGroup.value.maxAutoscaleSeats ?? 0) * this.options.seatPrice);\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private toastService: ToastService,\n    private internalOrganizationService: InternalOrganizationServiceAbstraction,\n  ) {}\n\n  ngOnInit() {\n    this.formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((value) => {\n      const maxAutoscaleSeatsControl = this.formGroup.controls.maxAutoscaleSeats;\n      const maxAutoscaleServiceAccountsControl =\n        this.formGroup.controls.maxAutoscaleServiceAccounts;\n\n      if (value.limitSeats) {\n        maxAutoscaleSeatsControl.setValidators([Validators.min(value.seatCount)]);\n        maxAutoscaleSeatsControl.enable({ emitEvent: false });\n      } else {\n        maxAutoscaleSeatsControl.disable({ emitEvent: false });\n      }\n\n      if (value.limitServiceAccounts) {\n        maxAutoscaleServiceAccountsControl.setValidators([\n          Validators.min(value.additionalServiceAccounts + this.options.baseServiceAccountCount),\n        ]);\n        maxAutoscaleServiceAccountsControl.enable({ emitEvent: false });\n      } else {\n        maxAutoscaleServiceAccountsControl.disable({ emitEvent: false });\n      }\n    });\n\n    this.formGroup.patchValue({\n      seatCount: this.options.seatCount,\n      maxAutoscaleSeats: this.options.maxAutoscaleSeats,\n      additionalServiceAccounts: this.options.additionalServiceAccounts,\n      maxAutoscaleServiceAccounts: this.options.maxAutoscaleServiceAccounts,\n      limitSeats: this.options.maxAutoscaleSeats != null,\n      limitServiceAccounts: this.options.maxAutoscaleServiceAccounts != null,\n    });\n  }\n\n  submit = async () => {\n    this.formGroup.markAllAsTouched();\n\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const request = new OrganizationSmSubscriptionUpdateRequest();\n    request.seatAdjustment = this.formGroup.value.seatCount - this.options.seatCount;\n    request.serviceAccountAdjustment =\n      this.formGroup.value.additionalServiceAccounts - this.options.additionalServiceAccounts;\n    request.maxAutoscaleSeats = this.formGroup.value.limitSeats\n      ? this.formGroup.value.maxAutoscaleSeats\n      : null;\n    request.maxAutoscaleServiceAccounts = this.formGroup.value.limitServiceAccounts\n      ? this.formGroup.value.maxAutoscaleServiceAccounts\n      : null;\n\n    const response = await this.organizationApiService.updateSecretsManagerSubscription(\n      this.organizationId,\n      request,\n    );\n\n    const organization = await this.internalOrganizationService.get(this.organizationId);\n\n    const organizationData = new OrganizationData(response, {\n      isMember: organization.isMember,\n      isProviderUser: organization.isProviderUser,\n    });\n\n    await this.internalOrganizationService.upsert(organizationData);\n\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"subscriptionUpdated\"),\n    });\n\n    this.onAdjusted.emit();\n  };\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nexport class SecretsManagerSubscribeRequest {\n  additionalSmSeats: number;\n  additionalServiceAccounts: number;\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\" *ngIf=\"plan\">\n  <sm-subscribe\n    [formGroup]=\"formGroup\"\n    [selectedPlan]=\"plan\"\n    [upgradeOrganization]=\"false\"\n    [showSubmitButton]=\"true\"\n    [customerDiscount]=\"customerDiscount\"\n  ></sm-subscribe>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { InternalOrganizationServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationData } from \"@bitwarden/common/admin-console/models/data/organization.data\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { SecretsManagerSubscribeRequest } from \"@bitwarden/common/billing/models/request/sm-subscribe.request\";\nimport { BillingCustomerDiscount } from \"@bitwarden/common/billing/models/response/organization-subscription.response\";\nimport { PlanResponse } from \"@bitwarden/common/billing/models/response/plan.response\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { ToastService } from \"@bitwarden/components\";\n\nimport { secretsManagerSubscribeFormFactory } from \"../shared\";\n\n@Component({\n  selector: \"sm-subscribe-standalone\",\n  templateUrl: \"sm-subscribe-standalone.component.html\",\n})\nexport class SecretsManagerSubscribeStandaloneComponent {\n  @Input() plan: PlanResponse;\n  @Input() organization: Organization;\n  @Input() customerDiscount: BillingCustomerDiscount;\n  @Output() onSubscribe = new EventEmitter<void>();\n\n  formGroup = secretsManagerSubscribeFormFactory(this.formBuilder);\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationService: InternalOrganizationServiceAbstraction,\n    private toastService: ToastService,\n  ) {}\n\n  submit = async () => {\n    const request = new SecretsManagerSubscribeRequest();\n    request.additionalSmSeats = this.plan.SecretsManager.hasAdditionalSeatsOption\n      ? this.formGroup.value.userSeats\n      : 0;\n    request.additionalServiceAccounts = this.plan.SecretsManager.hasAdditionalServiceAccountOption\n      ? this.formGroup.value.additionalServiceAccounts\n      : 0;\n\n    const profileOrganization = await this.organizationApiService.subscribeToSecretsManager(\n      this.organization.id,\n      request,\n    );\n    const organizationData = new OrganizationData(profileOrganization, {\n      isMember: this.organization.isMember,\n      isProviderUser: this.organization.isProviderUser,\n    });\n    await this.organizationService.upsert(organizationData);\n\n    /*\n      Because subscribing to Secrets Manager automatically provides access to Secrets Manager for the\n      subscribing user, we need to refresh the identity token to account for their updated permissions.\n    */\n    await this.apiService.refreshIdentityToken();\n\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"subscribedToSecretsManager\"),\n    });\n\n    this.onSubscribe.emit();\n  };\n}\n","<ng-container>\n  <bit-callout *ngIf=\"data.callout\" [type]=\"data.callout.severity\" [title]=\"data.callout.header\">\n    <p>{{ data.callout.body }}</p>\n    <button\n      *ngIf=\"data.callout.showReinstatementButton\"\n      bitButton\n      buttonType=\"secondary\"\n      [bitAction]=\"requestReinstatement\"\n      type=\"button\"\n    >\n      {{ \"reinstateSubscription\" | i18n }}\n    </button>\n  </bit-callout>\n  <dl class=\"tw-grid tw-grid-flow-col tw-grid-rows-2\">\n    <dt>{{ \"billingPlan\" | i18n }}</dt>\n    <dd>{{ planName }}</dd>\n    <ng-container *ngIf=\"data.status && data.date\">\n      <dt>{{ data.status.label }}</dt>\n      <dd>\n        <span class=\"tw-capitalize\">\n          {{ displayedStatus }}\n        </span>\n      </dd>\n      <dt>\n        {{ data.date.label | titlecase }}\n      </dt>\n      <dd>\n        {{ data.date.value | date: \"mediumDate\" }}\n      </dd>\n    </ng-container>\n  </dl>\n</ng-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/billing/models/response/organization-subscription.response\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\n\ntype ComponentData = {\n  status?: {\n    label: string;\n    value: string;\n  };\n  date?: {\n    label: string;\n    value: string;\n  };\n  callout?: {\n    severity: \"danger\" | \"warning\";\n    header: string;\n    body: string;\n    showReinstatementButton: boolean;\n  };\n};\n\n@Component({\n  selector: \"app-subscription-status\",\n  templateUrl: \"subscription-status.component.html\",\n})\nexport class SubscriptionStatusComponent {\n  @Input({ required: true }) organizationSubscriptionResponse: OrganizationSubscriptionResponse;\n  @Output() reinstatementRequested = new EventEmitter<void>();\n\n  constructor(\n    private datePipe: DatePipe,\n    private i18nService: I18nService,\n  ) {}\n\n  get displayedStatus(): string {\n    const sponsored = this.subscription.items.some((item) => item.sponsoredSubscriptionItem);\n    return sponsored ? this.i18nService.t(\"sponsored\") : this.data.status.value;\n  }\n\n  get planName() {\n    return this.organizationSubscriptionResponse.plan.name;\n  }\n\n  get status(): string {\n    return this.subscription\n      ? this.subscription.status != \"canceled\" && this.subscription.cancelAtEndDate\n        ? \"pending_cancellation\"\n        : this.subscription.status\n      : \"free\";\n  }\n\n  get subscription() {\n    return this.organizationSubscriptionResponse?.subscription;\n  }\n\n  get data(): ComponentData {\n    const defaultStatusLabel = this.i18nService.t(\"status\");\n\n    const nextChargeDateLabel = this.i18nService.t(\"nextCharge\");\n    const subscriptionExpiredDateLabel = this.i18nService.t(\"subscriptionExpired\");\n    const cancellationDateLabel = this.i18nService.t(\"cancellationDate\");\n\n    switch (this.status) {\n      case \"free\": {\n        return {};\n      }\n      case \"trialing\": {\n        return {\n          status: {\n            label: defaultStatusLabel,\n            value: this.i18nService.t(\"trial\"),\n          },\n          date: {\n            label: nextChargeDateLabel,\n            value: this.subscription.periodEndDate,\n          },\n        };\n      }\n      case \"active\": {\n        return {\n          status: {\n            label: defaultStatusLabel,\n            value: this.i18nService.t(\"active\"),\n          },\n          date: {\n            label: nextChargeDateLabel,\n            value: this.subscription.periodEndDate,\n          },\n        };\n      }\n      case \"past_due\": {\n        const pastDueText = this.i18nService.t(\"pastDue\");\n        const suspensionDate = this.datePipe.transform(\n          this.subscription.suspensionDate,\n          \"mediumDate\",\n        );\n        const calloutBody =\n          this.subscription.collectionMethod === \"charge_automatically\"\n            ? this.i18nService.t(\n                \"pastDueWarningForChargeAutomatically\",\n                this.subscription.gracePeriod,\n                suspensionDate,\n              )\n            : this.i18nService.t(\n                \"pastDueWarningForSendInvoice\",\n                this.subscription.gracePeriod,\n                suspensionDate,\n              );\n        return {\n          status: {\n            label: defaultStatusLabel,\n            value: pastDueText,\n          },\n          date: {\n            label: subscriptionExpiredDateLabel,\n            value: this.subscription.unpaidPeriodEndDate,\n          },\n          callout: {\n            severity: \"warning\",\n            header: pastDueText,\n            body: calloutBody,\n            showReinstatementButton: false,\n          },\n        };\n      }\n      case \"unpaid\": {\n        return {\n          status: {\n            label: defaultStatusLabel,\n            value: this.i18nService.t(\"unpaid\"),\n          },\n          date: {\n            label: subscriptionExpiredDateLabel,\n            value: this.subscription.unpaidPeriodEndDate,\n          },\n          callout: {\n            severity: \"danger\",\n            header: this.i18nService.t(\"unpaidInvoice\"),\n            body: this.i18nService.t(\"toReactivateYourSubscription\"),\n            showReinstatementButton: false,\n          },\n        };\n      }\n      case \"pending_cancellation\": {\n        const pendingCancellationText = this.i18nService.t(\"pendingCancellation\");\n        return {\n          status: {\n            label: defaultStatusLabel,\n            value: pendingCancellationText,\n          },\n          date: {\n            label: cancellationDateLabel,\n            value: this.subscription.periodEndDate,\n          },\n          callout: {\n            severity: \"warning\",\n            header: pendingCancellationText,\n            body: this.i18nService.t(\"subscriptionPendingCanceled\"),\n            showReinstatementButton: true,\n          },\n        };\n      }\n      case \"incomplete_expired\":\n      case \"canceled\": {\n        const canceledText = this.i18nService.t(\"canceled\");\n        return {\n          status: {\n            label: defaultStatusLabel,\n            value: canceledText,\n          },\n          date: {\n            label: cancellationDateLabel,\n            value: this.subscription.periodEndDate,\n          },\n          callout: {\n            severity: \"danger\",\n            header: canceledText,\n            body: this.i18nService.t(\"subscriptionCanceled\"),\n            showReinstatementButton: false,\n          },\n        };\n      }\n    }\n  }\n\n  requestReinstatement = () => this.reinstatementRequested.emit();\n}\n","<app-header></app-header>\n\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<bit-container *ngIf=\"showSubscription; else hideSubscription\">\n  <ng-container *ngIf=\"sub && !loading\">\n    <ng-container *ngIf=\"!(showUpdatedSubscriptionStatusSection$ | async)\">\n      <bit-callout\n        type=\"warning\"\n        title=\"{{ 'canceled' | i18n }}\"\n        *ngIf=\"subscription && subscription.cancelled\"\n      >\n        {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n      >\n      <bit-callout\n        type=\"warning\"\n        title=\"{{ 'pendingCancellation' | i18n }}\"\n        *ngIf=\"subscriptionMarkedForCancel\"\n      >\n        <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n        <button\n          *ngIf=\"userOrg.canEditSubscription\"\n          bitButton\n          buttonType=\"secondary\"\n          [bitAction]=\"reinstate\"\n          type=\"button\"\n        >\n          {{ \"reinstateSubscription\" | i18n }}\n        </button>\n      </bit-callout>\n\n      <dl class=\"tw-grid tw-grid-flow-col tw-grid-rows-2\">\n        <dt>{{ \"billingPlan\" | i18n }}</dt>\n        <dd>{{ sub.plan.name }}</dd>\n        <ng-container *ngIf=\"subscription\">\n          <dt>{{ \"status\" | i18n }}</dt>\n          <dd>\n            <span class=\"tw-capitalize\">{{\n              isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n            }}</span>\n            <span bitBadge variant=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n              \"pendingCancellation\" | i18n\n            }}</span>\n          </dd>\n          <dt [ngClass]=\"{ 'tw-text-danger': isExpired }\">\n            {{ \"subscriptionExpiration\" | i18n }}\n          </dt>\n          <dd [ngClass]=\"{ 'tw-text-danger': isExpired }\">\n            {{ nextInvoice ? (sub.subscription.periodEndDate | date: \"mediumDate\") : \"-\" }}\n          </dd>\n        </ng-container>\n      </dl>\n    </ng-container>\n    <app-subscription-status\n      *ngIf=\"showUpdatedSubscriptionStatusSection$ | async\"\n      [organizationSubscriptionResponse]=\"sub\"\n      (reinstatementRequested)=\"reinstate()\"\n    ></app-subscription-status>\n    <ng-container *ngIf=\"userOrg.canEditSubscription\">\n      <div class=\"tw-flex-col\">\n        <strong class=\"tw-block tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300\"\n          >{{ \"details\" | i18n\n          }}<span\n            class=\"tw-ml-3\"\n            *ngIf=\"customerDiscount?.percentOff > 0 && !isSecretsManagerTrial()\"\n            bitBadge\n            variant=\"success\"\n            >{{ \"providerDiscount\" | i18n: customerDiscount?.percentOff }}</span\n          ></strong\n        >\n        <bit-table>\n          <ng-template body>\n            <ng-container *ngIf=\"subscription\">\n              <tr bitRow *ngFor=\"let i of subscriptionLineItems\">\n                <td\n                  bitCell\n                  [ngClass]=\"{ 'tw-pl-20': i.addonSubscriptionItem }\"\n                  class=\"tw-align-middle\"\n                >\n                  <span *ngIf=\"!i.addonSubscriptionItem\">{{ i.productName | i18n }} -</span>\n                  {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} &#64;\n                  {{ i.amount | currency: \"$\" }}\n                </td>\n                <td bitCell class=\"tw-text-right\">\n                  <ng-container\n                    *ngIf=\"\n                      sub?.customerDiscount?.appliesTo?.includes(i.productId);\n                      else calculateElse\n                    \"\n                  >\n                    {{ \"freeForOneYear\" | i18n }}\n                  </ng-container>\n                  <ng-template #calculateElse>\n                    <div class=\"tw-flex tw-flex-col\">\n                      <span>\n                        {{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}\n                      </span>\n                      <span\n                        *ngIf=\"customerDiscount?.percentOff && !isSecretsManagerTrial()\"\n                        class=\"tw-line-through !tw-text-muted\"\n                        >{{\n                          calculateTotalAppliedDiscount(i.quantity * i.amount) | currency: \"$\"\n                        }}\n                        / {{ \"year\" | i18n }}</span\n                      >\n                    </div>\n                  </ng-template>\n                </td>\n              </tr>\n            </ng-container>\n            <ng-container *ngIf=\"userOrg.isFreeOrg\">\n              <tr bitRow *ngIf=\"userOrg.usePasswordManager\">\n                <td bitCell>{{ \"passwordManager\" | i18n }} - {{ \"freeOrganization\" | i18n }}</td>\n                <td bitCell class=\"tw-text-right\">{{ \"free\" | i18n }}</td>\n              </tr>\n              <tr bitRow *ngIf=\"userOrg.useSecretsManager\">\n                <td bitCell>{{ \"secretsManager\" | i18n }} - {{ \"freeOrganization\" | i18n }}</td>\n                <td bitCell class=\"tw-text-right\">{{ \"free\" | i18n }}</td>\n              </tr>\n            </ng-container>\n          </ng-template>\n        </bit-table>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"userOrg.canEditSubscription\">\n      <div class=\"tw-mt-5\">\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          (click)=\"changePlan()\"\n          *ngIf=\"showChangePlanButton\"\n        >\n          {{ \"changeBillingPlan\" | i18n }}\n        </button>\n        <app-change-plan\n          [organizationId]=\"organizationId\"\n          [currentPlan]=\"sub.plan\"\n          [preSelectedProductTier]=\"preSelectedProductTier\"\n          (onChanged)=\"closeChangePlan()\"\n          (onCanceled)=\"closeChangePlan()\"\n          *ngIf=\"showChangePlan\"\n        ></app-change-plan>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"showSecretsManagerSubscribe\">\n      <div class=\"tw-mt-7\">\n        <sm-subscribe-standalone\n          [plan]=\"sub.plan\"\n          [organization]=\"userOrg\"\n          [customerDiscount]=\"customerDiscount\"\n          (onSubscribe)=\"subscriptionAdjusted()\"\n        ></sm-subscribe-standalone>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"userOrg.canEditSubscription\">\n      <h2 bitTypography=\"h2\" class=\"tw-mt-7\">{{ \"manageSubscription\" | i18n }}</h2>\n      <p bitTypography=\"body1\" *ngIf=\"customerDiscount?.id === 'sm-standalone'\">\n        {{ \"smStandaloneTrialSeatCountUpdateMessageFragment1\" | i18n }}\n        {{ \"passwordManager\" | i18n }}\n        {{ \"smStandaloneTrialSeatCountUpdateMessageFragment2\" | i18n }}\n        <a href=\"https://bitwarden.com/contact/\" target=\"_blank\" rel=\"noreferrer\"\n          >{{ \"contactSupportShort\" | i18n }}.\n        </a>\n      </p>\n      <p bitTypography=\"body1\">{{ subscriptionDesc }}</p>\n      <ng-container\n        *ngIf=\"\n          subscription &&\n          canAdjustSeats &&\n          !subscription.cancelled &&\n          !subscriptionMarkedForCancel &&\n          (!customerDiscount || customerDiscount.id != 'sm-standalone')\n        \"\n      >\n        <h3 bitTypography=\"h3\" class=\"tw-mt-7\">{{ \"passwordManager\" | i18n }}</h3>\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </ng-container>\n      <button\n        bitButton\n        buttonType=\"danger\"\n        type=\"button\"\n        [bitAction]=\"removeSponsorship\"\n        *ngIf=\"isSponsoredSubscription\"\n      >\n        {{ \"removeSponsorship\" | i18n }}\n      </button>\n      <ng-container *ngIf=\"!customerDiscount || customerDiscount.id != 'sm-standalone'\">\n        <h4 bitTypography=\"h4\" class=\"tw-mt-9\">{{ \"storage\" | i18n }}</h4>\n        <p bitTypography=\"body1\">\n          {{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0 : sub.storageName || \"0 MB\" }}\n        </p>\n        <bit-progress [barWidth]=\"storagePercentage\" bgColor=\"success\"></bit-progress>\n        <ng-container\n          *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n        >\n          <div class=\"tw-mt-3\">\n            <div class=\"tw-flex tw-space-x-2\">\n              <button\n                bitButton\n                buttonType=\"secondary\"\n                type=\"button\"\n                [bitAction]=\"adjustStorage(true)\"\n              >\n                {{ \"addStorage\" | i18n }}\n              </button>\n              <button\n                bitButton\n                buttonType=\"secondary\"\n                type=\"button\"\n                [bitAction]=\"adjustStorage(false)\"\n              >\n                {{ \"removeStorage\" | i18n }}\n              </button>\n            </div>\n          </div>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"showAdjustSecretsManager\">\n        <h3 bitTypography=\"h3\" class=\"tw-mt-9\">{{ \"secretsManager\" | i18n }}</h3>\n        <app-sm-adjust-subscription\n          [organizationId]=\"organizationId\"\n          [options]=\"smOptions\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        ></app-sm-adjust-subscription>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"setupSelfHost\"></ng-container>\n    <ng-container *ngIf=\"userOrg.canEditSubscription\">\n      <h2 bitTypography=\"h2\" class=\"tw-mt-7\">{{ \"additionalOptions\" | i18n }}</h2>\n      <p bitTypography=\"body1\">\n        {{ \"additionalOptionsDesc\" | i18n }}\n      </p>\n      <div class=\"tw-flex tw-space-x-2\">\n        <button\n          bitButton\n          buttonType=\"danger\"\n          (click)=\"cancelSubscription()\"\n          type=\"button\"\n          *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n        >\n          {{ \"cancelSubscription\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n  </ng-container>\n</bit-container>\n<ng-template #hideSubscription>\n  <bit-container *ngIf=\"!loading\">\n    <ng-container\n      *ngIf=\"\n        organizationIsManagedByConsolidatedBillingMSP;\n        else organizationIsNotManagedByConsolidatedBillingMSP\n      \"\n    >\n      <h2 bitTypography=\"h2\">{{ \"manageSubscription\" | i18n }}</h2>\n      <p bitTypography=\"body1\" *ngIf=\"userOrg.isProviderUser; else isOrganizationOwner\">\n        {{ \"manageSubscriptionFromThe\" | i18n }}\n        <a [routerLink]=\"['/providers', userOrg.providerId, 'manage-client-organizations']\">{{\n          \"providerPortal\" | i18n\n        }}</a\n        >.\n      </p>\n      <ng-template #isOrganizationOwner>\n        <p>\n          {{ \"billingManagedByProvider\" | i18n: userOrg.providerName }}.\n          {{ \"billingContactProviderForAssistance\" | i18n }}.\n        </p>\n      </ng-template>\n      <ng-container *ngTemplateOutlet=\"setupSelfHost\"></ng-container>\n    </ng-container>\n    <ng-template #organizationIsNotManagedByConsolidatedBillingMSP>\n      <div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n        <bit-icon [icon]=\"subscriptionHiddenIcon\"></bit-icon>\n        <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: userOrg.providerName }}</p>\n        <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n      </div>\n    </ng-template>\n  </bit-container>\n</ng-template>\n\n<ng-template #setupSelfHost>\n  <ng-container *ngIf=\"showSelfHost\">\n    <h2 bitTypography=\"h2\" class=\"tw-mt-7\">\n      {{ \"selfHostingTitleProper\" | i18n }}\n    </h2>\n    <p bitTypography=\"body1\">\n      {{ \"toHostBitwardenOnYourOwnServer\" | i18n }}\n    </p>\n    <div class=\"tw-flex tw-space-x-2\">\n      <button bitButton buttonType=\"secondary\" type=\"button\" (click)=\"downloadLicense()\">\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"canUseBillingSync\"\n        bitButton\n        buttonType=\"secondary\"\n        type=\"button\"\n        (click)=\"manageBillingSync()\"\n      >\n        {{ (hasBillingSyncToken ? \"viewBillingToken\" : \"setUpBillingSync\") | i18n }}\n      </button>\n    </div>\n  </ng-container>\n</ng-template>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { firstValueFrom, lastValueFrom, Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/admin-console/enums\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { BillingApiServiceAbstraction } from \"@bitwarden/common/billing/abstractions\";\nimport { PlanType, ProductTierType } from \"@bitwarden/common/billing/enums\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/billing/models/response/organization-subscription.response\";\nimport { BillingSubscriptionItemResponse } from \"@bitwarden/common/billing/models/response/subscription.response\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\nimport { ConfigService } from \"@bitwarden/common/platform/abstractions/config/config.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\nimport {\n  AdjustStorageDialogV2Component,\n  AdjustStorageDialogV2ResultType,\n} from \"../shared/adjust-storage-dialog/adjust-storage-dialog-v2.component\";\nimport {\n  AdjustStorageDialogResult,\n  openAdjustStorageDialog,\n} from \"../shared/adjust-storage-dialog/adjust-storage-dialog.component\";\nimport {\n  OffboardingSurveyDialogResultType,\n  openOffboardingSurvey,\n} from \"../shared/offboarding-survey.component\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\nimport { ChangePlanDialogResultType, openChangePlanDialog } from \"./change-plan-dialog.component\";\nimport { DownloadLicenceDialogComponent } from \"./download-license.component\";\nimport { SubscriptionHiddenIcon } from \"./icons/subscription-hidden.icon\";\nimport { SecretsManagerSubscriptionOptions } from \"./sm-adjust-subscription.component\";\n\n@Component({\n  templateUrl: \"organization-subscription-cloud.component.html\",\n})\nexport class OrganizationSubscriptionCloudComponent implements OnInit, OnDestroy {\n  static readonly QUERY_PARAM_UPGRADE: string = \"upgrade\";\n  static readonly ROUTE_PARAM_ORGANIZATION_ID: string = \"organizationId\";\n\n  sub: OrganizationSubscriptionResponse;\n  lineItems: BillingSubscriptionItemResponse[] = [];\n  organizationId: string;\n  userOrg: Organization;\n  showChangePlan = false;\n  showDownloadLicense = false;\n  hasBillingSyncToken: boolean;\n  showAdjustSecretsManager = false;\n  showSecretsManagerSubscribe = false;\n  loading = true;\n  locale: string;\n  showUpdatedSubscriptionStatusSection$: Observable<boolean>;\n  preSelectedProductTier: ProductTierType = ProductTierType.Free;\n  showSubscription = true;\n  showSelfHost = false;\n  organizationIsManagedByConsolidatedBillingMSP = false;\n\n  protected readonly subscriptionHiddenIcon = SubscriptionHiddenIcon;\n  protected readonly teamsStarter = ProductTierType.TeamsStarter;\n\n  protected deprecateStripeSourcesAPI$ = this.configService.getFeatureFlag$(\n    FeatureFlag.AC2476_DeprecateStripeSourcesAPI,\n  );\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private route: ActivatedRoute,\n    private dialogService: DialogService,\n    private configService: ConfigService,\n    private toastService: ToastService,\n    private billingApiService: BillingApiServiceAbstraction,\n  ) {}\n\n  async ngOnInit() {\n    this.organizationId =\n      this.route.snapshot.params[\n        OrganizationSubscriptionCloudComponent.ROUTE_PARAM_ORGANIZATION_ID\n      ];\n    await this.load();\n\n    this.showUpdatedSubscriptionStatusSection$ = this.configService.getFeatureFlag$(\n      FeatureFlag.AC1795_UpdatedSubscriptionStatusSection,\n    );\n\n    if (\n      this.route.snapshot.queryParams[OrganizationSubscriptionCloudComponent.QUERY_PARAM_UPGRADE]\n    ) {\n      await this.changePlan();\n      const productTierTypeStr = this.route.snapshot.queryParamMap.get(\"productTierType\");\n      if (productTierTypeStr != null) {\n        const productTier = Number(productTierTypeStr);\n        if (Object.values(ProductTierType).includes(productTier as ProductTierType)) {\n          this.preSelectedProductTier = productTier;\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n    this.userOrg = await this.organizationService.get(this.organizationId);\n\n    const isIndependentOrganizationOwner = !this.userOrg.hasProvider && this.userOrg.isOwner;\n    const isResoldOrganizationOwner = this.userOrg.hasReseller && this.userOrg.isOwner;\n    const isMSPUser = this.userOrg.hasProvider && this.userOrg.isProviderUser;\n\n    const metadata = await this.billingApiService.getOrganizationBillingMetadata(\n      this.organizationId,\n    );\n\n    this.organizationIsManagedByConsolidatedBillingMSP =\n      this.userOrg.hasProvider && metadata.isManaged;\n\n    this.showSubscription =\n      isIndependentOrganizationOwner ||\n      isResoldOrganizationOwner ||\n      (isMSPUser && !this.organizationIsManagedByConsolidatedBillingMSP);\n\n    this.showSelfHost = metadata.isEligibleForSelfHost;\n\n    if (this.showSubscription) {\n      this.sub = await this.organizationApiService.getSubscription(this.organizationId);\n      this.lineItems = this.sub?.subscription?.items;\n\n      if (this.lineItems && this.lineItems.length) {\n        this.lineItems = this.lineItems\n          .map((item) => {\n            const itemTotalAmount = item.amount * item.quantity;\n            const seatPriceTotal = this.sub.plan?.SecretsManager?.seatPrice * item.quantity;\n            item.productName =\n              itemTotalAmount === seatPriceTotal || item.name.includes(\"Service Accounts\")\n                ? \"secretsManager\"\n                : \"passwordManager\";\n            return item;\n          })\n          .sort(sortSubscriptionItems);\n      }\n\n      if (this.sub?.customerDiscount?.percentOff == 100) {\n        this.lineItems.reverse();\n      }\n    }\n\n    const apiKeyResponse = await this.organizationApiService.getApiKeyInformation(\n      this.organizationId,\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync,\n    );\n\n    this.showSecretsManagerSubscribe =\n      this.userOrg.canEditSubscription &&\n      !this.userOrg.hasProvider &&\n      this.sub?.plan?.SecretsManager &&\n      !this.userOrg.useSecretsManager &&\n      !this.subscription?.cancelled &&\n      !this.subscriptionMarkedForCancel;\n\n    this.showAdjustSecretsManager =\n      this.userOrg.canEditSubscription &&\n      this.userOrg.useSecretsManager &&\n      this.subscription != null &&\n      this.sub.plan?.SecretsManager?.hasAdditionalSeatsOption &&\n      !this.subscription.cancelled &&\n      !this.subscriptionMarkedForCancel;\n\n    this.loading = false;\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get subscriptionLineItems() {\n    return this.lineItems.map((lineItem: BillingSubscriptionItemResponse) => ({\n      name: lineItem.name,\n      amount: this.discountPrice(lineItem.amount, lineItem.productId),\n      quantity: lineItem.quantity,\n      interval: lineItem.interval,\n      sponsoredSubscriptionItem: lineItem.sponsoredSubscriptionItem,\n      addonSubscriptionItem: lineItem.addonSubscriptionItem,\n      productName: lineItem.productName,\n      productId: lineItem.productId,\n    }));\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get customerDiscount() {\n    return this.sub != null ? this.sub.customerDiscount : null;\n  }\n\n  get isExpired() {\n    const nextInvoice = this.nextInvoice;\n\n    if (nextInvoice == null) {\n      return false;\n    }\n\n    return new Date(nextInvoice.date).getTime() < Date.now();\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.PasswordManager.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.discountPrice(this.sub.plan.PasswordManager.seatPrice);\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get smOptions(): SecretsManagerSubscriptionOptions {\n    return {\n      seatCount: this.sub.smSeats,\n      maxAutoscaleSeats: this.sub.maxAutoscaleSmSeats,\n      seatPrice: this.sub.plan.SecretsManager.seatPrice,\n      maxAutoscaleServiceAccounts: this.sub.maxAutoscaleSmServiceAccounts,\n      additionalServiceAccounts:\n        this.sub.smServiceAccounts - this.sub.plan.SecretsManager.baseServiceAccount,\n      interval: this.sub.plan.isAnnual ? \"year\" : \"month\",\n      additionalServiceAccountPrice: this.sub.plan.SecretsManager.additionalPricePerServiceAccount,\n      baseServiceAccountCount: this.sub.plan.SecretsManager.baseServiceAccount,\n    };\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.PasswordManager.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019 ||\n      this.sub.planType === PlanType.TeamsStarter2023 ||\n      this.sub.planType === PlanType.TeamsStarter\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionUpgrade\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      const seatAdjustmentMessage = this.sub.plan.isAnnual\n        ? \"annualSubscriptionUserSeatsMessage\"\n        : \"monthlySubscriptionUserSeatsMessage\";\n      return this.i18nService.t(\n        seatAdjustmentMessage + \"subscriptionSeatMaxReached\",\n        this.sub.seats.toString(),\n      );\n    } else if (this.userOrg.productTierType === ProductTierType.TeamsStarter) {\n      return this.i18nService.t(\"subscriptionUserSeatsWithoutAdditionalSeatsOption\", 10);\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      const seatAdjustmentMessage = this.sub.plan.isAnnual\n        ? \"annualSubscriptionUserSeatsMessage\"\n        : \"monthlySubscriptionUserSeatsMessage\";\n      return this.i18nService.t(seatAdjustmentMessage);\n    } else {\n      const seatAdjustmentMessage = this.sub.plan.isAnnual\n        ? \"annualSubscriptionUserSeatsMessage\"\n        : \"monthlySubscriptionUserSeatsMessage\";\n      return this.i18nService.t(seatAdjustmentMessage, this.sub.maxAutoscaleSeats.toString());\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  cancelSubscription = async () => {\n    const reference = openOffboardingSurvey(this.dialogService, {\n      data: {\n        type: \"Organization\",\n        id: this.organizationId,\n      },\n    });\n\n    const result = await lastValueFrom(reference.closed);\n\n    if (result === OffboardingSurveyDialogResultType.Closed) {\n      return;\n    }\n\n    await this.load();\n  };\n\n  reinstate = async () => {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.dialogService.openSimpleDialog({\n      title: { key: \"reinstateSubscription\" },\n      content: { key: \"reinstateConfirmation\" },\n      type: \"warning\",\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      await this.organizationApiService.reinstate(this.organizationId);\n      this.toastService.showToast({\n        variant: \"success\",\n        title: null,\n        message: this.i18nService.t(\"reinstated\"),\n      });\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  async changePlan() {\n    const reference = openChangePlanDialog(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n        subscription: this.sub,\n        productTierType: this.userOrg.productTierType,\n      },\n    });\n\n    const result = await lastValueFrom(reference.closed);\n\n    if (result === ChangePlanDialogResultType.Closed) {\n      return;\n    }\n    await this.load();\n  }\n\n  isSecretsManagerTrial(): boolean {\n    return (\n      this.sub?.subscription?.items?.some((item) =>\n        this.sub?.customerDiscount?.appliesTo?.includes(item.productId),\n      ) ?? false\n    );\n  }\n\n  closeChangePlan() {\n    this.showChangePlan = false;\n  }\n\n  async downloadLicense() {\n    DownloadLicenceDialogComponent.open(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n      },\n    });\n  }\n\n  async manageBillingSync() {\n    const dialogRef = BillingSyncApiKeyComponent.open(this.dialogService, {\n      organizationId: this.organizationId,\n      hasBillingToken: this.hasBillingSyncToken,\n    });\n\n    await firstValueFrom(dialogRef.closed);\n    await this.load();\n  }\n\n  async subscriptionAdjusted() {\n    await this.load();\n  }\n\n  calculateTotalAppliedDiscount(total: number) {\n    return total / (1 - this.customerDiscount?.percentOff / 100);\n  }\n\n  adjustStorage = (add: boolean) => {\n    return async () => {\n      const deprecateStripeSourcesAPI = await firstValueFrom(this.deprecateStripeSourcesAPI$);\n\n      if (deprecateStripeSourcesAPI) {\n        const dialogRef = AdjustStorageDialogV2Component.open(this.dialogService, {\n          data: {\n            price: this.storageGbPrice,\n            cadence: this.billingInterval,\n            type: add ? \"Add\" : \"Remove\",\n            organizationId: this.organizationId,\n          },\n        });\n\n        const result = await lastValueFrom(dialogRef.closed);\n\n        if (result === AdjustStorageDialogV2ResultType.Submitted) {\n          await this.load();\n        }\n      } else {\n        const dialogRef = openAdjustStorageDialog(this.dialogService, {\n          data: {\n            storageGbPrice: this.storageGbPrice,\n            add: add,\n            organizationId: this.organizationId,\n            interval: this.billingInterval,\n          },\n        });\n        const result = await lastValueFrom(dialogRef.closed);\n        if (result === AdjustStorageDialogResult.Adjusted) {\n          await this.load();\n        }\n      }\n    };\n  };\n\n  removeSponsorship = async () => {\n    const confirmed = await this.dialogService.openSimpleDialog({\n      title: { key: \"removeSponsorship\" },\n      content: { key: \"removeSponsorshipConfirmation\" },\n      acceptButtonText: { key: \"remove\" },\n      type: \"warning\",\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      await this.apiService.deleteRemoveSponsorship(this.organizationId);\n      this.toastService.showToast({\n        variant: \"success\",\n        title: null,\n        message: this.i18nService.t(\"removeSponsorshipSuccess\"),\n      });\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  discountPrice = (price: number, productId: string = null) => {\n    const discount =\n      this.customerDiscount?.active &&\n      (!productId ||\n        !this.customerDiscount.appliesTo.length ||\n        this.customerDiscount.appliesTo.includes(productId))\n        ? price * (this.customerDiscount.percentOff / 100)\n        : 0;\n\n    return price - discount;\n  };\n\n  get showChangePlanButton() {\n    return this.sub.plan.productTier !== ProductTierType.Enterprise && !this.showChangePlan;\n  }\n\n  get canUseBillingSync() {\n    return this.userOrg.productTierType === ProductTierType.Enterprise;\n  }\n}\n\n/**\n * Helper to sort subscription items by productTier type and then by addon status\n */\nfunction sortSubscriptionItems(\n  a: BillingSubscriptionItemResponse,\n  b: BillingSubscriptionItemResponse,\n) {\n  if (a.productName == b.productName) {\n    if (a.addonSubscriptionItem == b.addonSubscriptionItem) {\n      return 0;\n    }\n    // sort addon items to the bottom\n    if (a.addonSubscriptionItem) {\n      return 1;\n    }\n    return -1;\n  }\n  return a.productName.localeCompare(b.productName);\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n  lastLicenseSync: Date;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n\n    const lastLicenseSyncString = this.getResponseProperty(\"LastLicenseSync\");\n    if (lastLicenseSyncString) {\n      this.lastLicenseSync = new Date(lastLicenseSyncString);\n    }\n  }\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { View } from \"../../../models/view/view\";\nimport { OrganizationSubscriptionResponse } from \"../response/organization-subscription.response\";\n\nexport class SelfHostedOrganizationSubscriptionView implements View {\n  planName: string;\n\n  /**\n   * Date the subscription expires, including the grace period.\n   */\n  expirationWithGracePeriod?: Date;\n\n  /**\n   * Date the subscription expires, excluding the grace period.\n   * This will be `null` for older (< v12) license files because they do not include this date.\n   * In this case, you have to rely on the `expirationWithGracePeriod` instead.\n   */\n  expirationWithoutGracePeriod?: Date;\n\n  constructor(response: OrganizationSubscriptionResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.planName = response.plan.name;\n    this.expirationWithGracePeriod =\n      response.expiration != null ? new Date(response.expiration) : null;\n    this.expirationWithoutGracePeriod =\n      response.expirationWithoutGracePeriod != null\n        ? new Date(response.expirationWithoutGracePeriod)\n        : null;\n  }\n\n  /**\n   * The subscription has separate expiration dates for the subscription and the end of grace period.\n   */\n  get hasSeparateGracePeriod() {\n    return this.expirationWithGracePeriod != null && this.expirationWithoutGracePeriod != null;\n  }\n\n  /**\n   * True if the subscription has an expiration date.\n   */\n  get hasExpiration() {\n    return this.expirationWithGracePeriod != null;\n  }\n\n  /**\n   * True if the subscription has an expiration date that has past, but may still be within the grace period.\n   * For older licenses (< v12), this will always be false because they do not include the `expirationWithoutGracePeriod`.\n   */\n  get isExpiredWithoutGracePeriod() {\n    return this.hasSeparateGracePeriod && this.expirationWithoutGracePeriod < new Date();\n  }\n\n  /**\n   * True if the subscription has an expiration date that has past, including the grace period.\n   */\n  get isExpiredAndOutsideGracePeriod() {\n    return this.hasExpiration && this.expirationWithGracePeriod < new Date();\n  }\n\n  /**\n   * In the case of a trial, where there is no grace period, the expirationWithGracePeriod and expirationWithoutGracePeriod will\n   * be exactly the same. This can be used to hide the grace period note.\n   */\n  get isInTrial() {\n    return (\n      this.expirationWithGracePeriod &&\n      this.expirationWithoutGracePeriod &&\n      this.expirationWithGracePeriod.getTime() === this.expirationWithoutGracePeriod.getTime()\n    );\n  }\n}\n","import { BillingSyncConfigRequest } from \"../../../billing/models/request/billing-sync-config.request\";\nimport { OrganizationConnectionType } from \"../../enums\";\n\nimport { ScimConfigRequest } from \"./scim-config.request\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs,\n  ) {}\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { DIALOG_DATA, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/admin-console/enums\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/admin-console/models/request/organization-connection.request\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/admin-console/models/response/organization-connection.response\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/billing/models/api/billing-sync-config.api\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/billing/models/request/billing-sync-config.request\";\nimport { LogService } from \"@bitwarden/common/platform/abstractions/log.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BillingSyncKeyModalData {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n}\n\n@Component({\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  protected entityId: string;\n  protected existingConnectionId: string;\n  protected billingSyncKey: string;\n  protected setParentConnection: (\n    connection: OrganizationConnectionResponse<BillingSyncConfigApi>,\n  ) => void;\n\n  protected formGroup: FormGroup;\n\n  constructor(\n    private dialogRef: DialogRef,\n    @Inject(DIALOG_DATA) protected data: BillingSyncKeyModalData,\n    private apiService: ApiService,\n    private logService: LogService,\n  ) {\n    this.entityId = data.entityId;\n    this.existingConnectionId = data.existingConnectionId;\n    this.billingSyncKey = data.billingSyncKey;\n    this.setParentConnection = data.setParentConnection;\n\n    this.formGroup = new FormGroup({\n      billingSyncKey: new FormControl<string>(this.billingSyncKey, Validators.required),\n    });\n  }\n\n  submit = async () => {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.formGroup.value.billingSyncKey),\n      );\n\n      const response =\n        this.existingConnectionId == null\n          ? await this.apiService.createOrganizationConnection(request, BillingSyncConfigApi)\n          : await this.apiService.updateOrganizationConnection(\n              request,\n              BillingSyncConfigApi,\n              this.existingConnectionId,\n            );\n\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n      this.dialogRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  deleteConnection = async () => {\n    await this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    this.setParentConnection(null);\n    this.dialogRef.close();\n  };\n\n  static open(dialogService: DialogService, data: BillingSyncKeyModalData) {\n    return dialogService.open(BillingSyncKeyComponent, { data });\n  }\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog>\n    <span bitDialogTitle>\n      {{ \"manageBillingTokenSync\" | i18n }}\n    </span>\n    <div bitDialogContent>\n      <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n      <bit-form-field>\n        <bit-label>\n          {{ \"billingSyncKey\" | i18n }}\n        </bit-label>\n        <input\n          bitInput\n          id=\"billingSyncKey\"\n          type=\"text\"\n          formControlName=\"billingSyncKey\"\n          appAutofocus\n          appInputVerbatim\n        />\n      </bit-form-field>\n    </div>\n    <ng-container bitDialogFooter>\n      <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button bitButton bitDialogClose type=\"button\">\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        class=\"tw-ml-auto\"\n        type=\"button\"\n        buttonType=\"danger\"\n        bitIconButton=\"bwi-trash\"\n        bitFormButton\n        [bitAction]=\"deleteConnection\"\n        appA11yTitle=\"{{ 'delete' | i18n }}\"\n      ></button>\n    </ng-container>\n  </bit-dialog>\n</form>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, Input } from \"@angular/core\";\n\nimport { svgIcon } from \"@bitwarden/components\";\n\nconst SubscriptionHiddenIcon = svgIcon`\n<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n</svg>\n`;\n\n@Component({\n  selector: \"app-org-subscription-hidden\",\n  template: `<div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <bit-icon [icon]=\"subscriptionHiddenIcon\"></bit-icon>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>`,\n})\nexport class SubscriptionHiddenComponent {\n  @Input() providerName: string;\n  subscriptionHiddenIcon = SubscriptionHiddenIcon;\n}\n","<app-header></app-header>\n\n<bit-container>\n  <ng-container *ngIf=\"!firstLoaded && loading\">\n    <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n    <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n\n  <app-org-subscription-hidden\n    *ngIf=\"firstLoaded && !userOrg.canViewSubscription\"\n    [providerName]=\"userOrg.providerName\"\n  ></app-org-subscription-hidden>\n\n  <ng-container *ngIf=\"subscription && firstLoaded\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ subscription.planName }}</dd>\n      <ng-container *ngIf=\"billingSyncSetUp\">\n        <dt>{{ \"lastLicenseSync\" | i18n }}</dt>\n        <dd>\n          {{ lastLicenseSync != null ? (lastLicenseSync | date: \"medium\") : (\"never\" | i18n) }}\n        </dd>\n      </ng-container>\n      <dt>\n        <span [ngClass]=\"{ 'tw-text-danger': showAsExpired }\">{{\n          \"subscriptionExpiration\" | i18n\n        }}</span>\n        <a\n          href=\"https://bitwarden.com/help/licensing-on-premise/#update-organization-license\"\n          target=\"_blank\"\n          [appA11yTitle]=\"'licensePaidFeaturesHelp' | i18n\"\n          rel=\"noreferrer\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          <span class=\"tw-sr-only\">{{ \"licensePaidFeaturesHelp\" | i18n }}</span>\n        </a>\n      </dt>\n      <dd *ngIf=\"subscription.hasExpiration\" [ngClass]=\"{ 'tw-text-danger': showAsExpired }\">\n        {{\n          (subscription.hasSeparateGracePeriod\n            ? subscription.expirationWithoutGracePeriod\n            : subscription.expirationWithGracePeriod\n          ) | date: \"mediumDate\"\n        }}\n        <div\n          *ngIf=\"subscription.hasSeparateGracePeriod && !subscription.isInTrial\"\n          class=\"tw-text-muted\"\n        >\n          {{\n            \"selfHostGracePeriodHelp\"\n              | i18n: (subscription.expirationWithGracePeriod | date: \"mediumDate\")\n          }}\n        </div>\n      </dd>\n      <dd *ngIf=\"!subscription.hasExpiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n\n    <a\n      bitButton\n      buttonType=\"secondary\"\n      href=\"{{ this.cloudWebVaultUrl }}\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {{ \"launchCloudSubscription\" | i18n }}\n    </a>\n    <form [formGroup]=\"form\">\n      <bit-radio-group formControlName=\"updateMethod\" [block]=\"true\">\n        <h2 class=\"mt-5\">\n          {{ \"licenseAndBillingManagement\" | i18n }}\n        </h2>\n        <bit-radio-button\n          id=\"automatic-sync\"\n          [value]=\"licenseOptions.SYNC\"\n          [disabled]=\"disableLicenseSyncControl\"\n          *ngIf=\"showAutomaticSyncAndManualUpload\"\n        >\n          <bit-label\n            >{{ \"automaticSync\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/families-for-enterprise-self-hosted/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              slot=\"end\"\n              bitLink\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n              <span class=\"tw-sr-only\">{{ \"billingSyncHelp\" | i18n }}</span>\n            </a>\n          </bit-label>\n          <bit-hint>\n            {{ \"automaticBillingSyncDesc\" | i18n }}\n          </bit-hint>\n        </bit-radio-button>\n        <ng-container *ngIf=\"updateMethod === licenseOptions.SYNC\">\n          <div class=\"tw-mt-6\">\n            <button\n              bitButton\n              buttonType=\"secondary\"\n              type=\"button\"\n              (click)=\"manageBillingSyncSelfHosted()\"\n            >\n              {{ \"manageBillingTokenSync\" | i18n }}\n            </button>\n            <button\n              bitButton\n              buttonType=\"primary\"\n              type=\"button\"\n              [bitAction]=\"syncLicense\"\n              [disabled]=\"!billingSyncEnabled\"\n            >\n              {{ \"syncLicense\" | i18n }}\n            </button>\n          </div>\n        </ng-container>\n\n        <bit-radio-button\n          id=\"manual-upload\"\n          [value]=\"licenseOptions.UPLOAD\"\n          class=\"tw-mt-6\"\n          *ngIf=\"showAutomaticSyncAndManualUpload\"\n        >\n          <bit-label>{{ \"manualUpload\" | i18n }}</bit-label>\n          <bit-hint>\n            {{ \"manualBillingTokenUploadDesc\" | i18n }}\n          </bit-hint>\n        </bit-radio-button>\n        <ng-container *ngIf=\"updateMethod === licenseOptions.UPLOAD\">\n          <bit-label class=\"tw-mb-6 tw-block\" *ngIf=\"!showAutomaticSyncAndManualUpload\">\n            {{ \"licenseAndBillingManagementDesc\" | i18n }}\n          </bit-label>\n          <h3 *ngIf=\"showAutomaticSyncAndManualUpload\" class=\"tw-font-semibold tw-mt-6\">\n            {{ \"uploadLicense\" | i18n }}\n          </h3>\n          <app-update-license\n            [showAutomaticSyncAndManualUpload]=\"showAutomaticSyncAndManualUpload\"\n            [organizationId]=\"organizationId\"\n            [showCancel]=\"false\"\n            (onUpdated)=\"licenseUploaded()\"\n          ></app-update-license>\n        </ng-container>\n      </bit-radio-group>\n    </form>\n  </ng-container>\n</bit-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, firstValueFrom, Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/admin-console/enums\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/admin-console/models/response/organization-connection.response\";\nimport { ProductTierType } from \"@bitwarden/common/billing/enums\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/billing/models/api/billing-sync-config.api\";\nimport { SelfHostedOrganizationSubscriptionView } from \"@bitwarden/common/billing/models/view/self-hosted-organization-subscription.view\";\nimport { EnvironmentService } from \"@bitwarden/common/platform/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/platform/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\nimport { BillingSyncKeyComponent } from \"./billing-sync-key.component\";\n\nenum LicenseOptions {\n  SYNC = 0,\n  UPLOAD = 1,\n}\n\n@Component({\n  templateUrl: \"organization-subscription-selfhost.component.html\",\n})\nexport class OrganizationSubscriptionSelfhostComponent implements OnInit, OnDestroy {\n  subscription: SelfHostedOrganizationSubscriptionView;\n  organizationId: string;\n  userOrg: Organization;\n  cloudWebVaultUrl: string;\n  showAutomaticSyncAndManualUpload: boolean;\n\n  licenseOptions = LicenseOptions;\n  form = new FormGroup({\n    updateMethod: new FormControl(LicenseOptions.UPLOAD),\n  });\n\n  disableLicenseSyncControl = false;\n\n  firstLoaded = false;\n  loading = false;\n\n  private _existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  private destroy$ = new Subject<void>();\n\n  set existingBillingSyncConnection(value: OrganizationConnectionResponse<BillingSyncConfigApi>) {\n    this._existingBillingSyncConnection = value;\n\n    this.form\n      .get(\"updateMethod\")\n      .setValue(this.billingSyncEnabled ? LicenseOptions.SYNC : LicenseOptions.UPLOAD);\n  }\n\n  get existingBillingSyncConnection() {\n    return this._existingBillingSyncConnection;\n  }\n\n  get billingSyncEnabled() {\n    return this.existingBillingSyncConnection?.enabled;\n  }\n\n  /**\n   * Render the subscription as expired.\n   */\n  get showAsExpired() {\n    return this.subscription.hasSeparateGracePeriod\n      ? this.subscription.isExpiredWithoutGracePeriod\n      : this.subscription.isExpiredAndOutsideGracePeriod;\n  }\n\n  constructor(\n    private messagingService: MessagingService,\n    private apiService: ApiService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private dialogService: DialogService,\n    private toastService: ToastService,\n  ) {}\n\n  async ngOnInit() {\n    this.cloudWebVaultUrl = await firstValueFrom(this.environmentService.cloudWebVaultUrl$);\n\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n          await this.loadOrganizationConnection();\n          this.firstLoaded = true;\n        }),\n        takeUntil(this.destroy$),\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    this.showAutomaticSyncAndManualUpload =\n      this.userOrg.productTierType == ProductTierType.Families ? false : true;\n    if (this.userOrg.canViewSubscription) {\n      const subscriptionResponse = await this.organizationApiService.getSubscription(\n        this.organizationId,\n      );\n      this.subscription = new SelfHostedOrganizationSubscriptionView(subscriptionResponse);\n    }\n\n    this.loading = false;\n  }\n\n  async loadOrganizationConnection() {\n    if (!this.firstLoaded) {\n      const cloudCommunicationEnabled = await this.apiService.getCloudCommunicationsEnabled();\n      this.disableLicenseSyncControl = !cloudCommunicationEnabled;\n    }\n\n    if (this.disableLicenseSyncControl) {\n      return;\n    }\n\n    this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.CloudBillingSync,\n      BillingSyncConfigApi,\n    );\n  }\n\n  licenseUploaded() {\n    // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.load();\n    this.messagingService.send(\"updatedOrgLicense\");\n  }\n\n  manageBillingSyncSelfHosted() {\n    BillingSyncKeyComponent.open(this.dialogService, {\n      entityId: this.organizationId,\n      existingConnectionId: this.existingBillingSyncConnection?.id,\n      billingSyncKey: this.existingBillingSyncConnection?.config?.billingSyncKey,\n      setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => {\n        this.existingBillingSyncConnection = connection;\n      },\n    });\n  }\n\n  syncLicense = async () => {\n    this.form.get(\"updateMethod\").setValue(LicenseOptions.SYNC);\n    await this.organizationApiService.selfHostedSyncLicense(this.organizationId);\n\n    // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.load();\n    await this.loadOrganizationConnection();\n    this.messagingService.send(\"updatedOrgLicense\");\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"licenseSyncSuccess\"),\n    });\n  };\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n\n  get updateMethod() {\n    return this.form.get(\"updateMethod\").value;\n  }\n\n  get lastLicenseSync() {\n    return this.existingBillingSyncConnection?.config?.lastLicenseSync;\n  }\n}\n","<bit-banner\n  id=\"free-trial-banner\"\n  class=\"-tw-m-6 tw-flex tw-flex-col tw-pb-6\"\n  bannerType=\"premium\"\n  icon=\"bwi-billing\"\n  [showClose]=\"false\"\n  *ngIf=\"freeTrialData?.shownBanner\"\n>\n  {{ freeTrialData.message }}\n  <a\n    bitLink\n    linkType=\"secondary\"\n    (click)=\"changePayment()\"\n    class=\"tw-cursor-pointer\"\n    rel=\"noreferrer noopener\"\n  >\n    {{ \"clickHereToAddPaymentMethod\" | i18n }}\n  </a>\n</bit-banner>\n<app-header></app-header>\n<bit-container>\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin tw-text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <!-- Account Credit -->\n    <bit-section>\n      <h2 bitTypography=\"h2\">\n        {{ accountCreditHeaderText }}\n      </h2>\n      <p class=\"tw-text-lg tw-font-bold\">{{ Math.abs(accountCredit) | currency: \"$\" }}</p>\n      <p bitTypography=\"body1\">{{ \"creditAppliedDesc\" | i18n }}</p>\n      <button type=\"button\" bitButton buttonType=\"secondary\" [bitAction]=\"addAccountCredit\">\n        {{ \"addCredit\" | i18n }}\n      </button>\n    </bit-section>\n    <!-- Payment Method -->\n    <bit-section>\n      <h2 bitTypography=\"h2\">{{ \"paymentMethod\" | i18n }}</h2>\n      <p *ngIf=\"!paymentSource\" bitTypography=\"body1\">{{ \"noPaymentMethod\" | i18n }}</p>\n      <ng-container *ngIf=\"paymentSource\">\n        <app-verify-bank-account\n          *ngIf=\"paymentSource.needsVerification\"\n          [onSubmit]=\"verifyBankAccount\"\n          (submitted)=\"load()\"\n        >\n        </app-verify-bank-account>\n        <p>\n          <i class=\"bwi bwi-fw\" [ngClass]=\"paymentSourceClasses\"></i>\n          {{ paymentSource.description }}\n          <span *ngIf=\"paymentSource.needsVerification\">- {{ \"unverified\" | i18n }}</span>\n        </p>\n      </ng-container>\n      <button type=\"button\" bitButton buttonType=\"secondary\" [bitAction]=\"updatePaymentMethod\">\n        {{ updatePaymentSourceButtonText }}\n      </button>\n      <p *ngIf=\"subscriptionIsUnpaid\" bitTypography=\"body1\">\n        {{ \"paymentChargedWithUnpaidSubscription\" | i18n }}\n      </p>\n    </bit-section>\n  </ng-container>\n</bit-container>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Location } from \"@angular/common\";\nimport { Component, OnDestroy } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { from, lastValueFrom, switchMap } from \"rxjs\";\n\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\nimport { BillingApiServiceAbstraction } from \"@bitwarden/common/billing/abstractions\";\nimport { PaymentMethodType } from \"@bitwarden/common/billing/enums\";\nimport { VerifyBankAccountRequest } from \"@bitwarden/common/billing/models/request/verify-bank-account.request\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/billing/models/response/organization-subscription.response\";\nimport { PaymentSourceResponse } from \"@bitwarden/common/billing/models/response/payment-source.response\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\nimport { SyncService } from \"@bitwarden/common/platform/sync\";\nimport { DialogService, ToastService } from \"@bitwarden/components\";\n\nimport { FreeTrial } from \"../../../core/types/free-trial\";\nimport { TrialFlowService } from \"../../services/trial-flow.service\";\nimport {\n  AddCreditDialogResult,\n  openAddCreditDialog,\n} from \"../../shared/add-credit-dialog.component\";\nimport {\n  AdjustPaymentDialogV2Component,\n  AdjustPaymentDialogV2ResultType,\n} from \"../../shared/adjust-payment-dialog/adjust-payment-dialog-v2.component\";\n\n@Component({\n  templateUrl: \"./organization-payment-method.component.html\",\n})\nexport class OrganizationPaymentMethodComponent implements OnDestroy {\n  organizationId: string;\n  isUnpaid = false;\n  accountCredit: number;\n  paymentSource?: PaymentSourceResponse;\n  subscriptionStatus?: string;\n  protected freeTrialData: FreeTrial;\n  organization: Organization;\n  organizationSubscriptionResponse: OrganizationSubscriptionResponse;\n\n  loading = true;\n\n  protected readonly Math = Math;\n  launchPaymentModalAutomatically = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private billingApiService: BillingApiServiceAbstraction,\n    protected organizationApiService: OrganizationApiServiceAbstraction,\n    private dialogService: DialogService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private toastService: ToastService,\n    private location: Location,\n    private trialFlowService: TrialFlowService,\n    private organizationService: OrganizationService,\n    protected syncService: SyncService,\n  ) {\n    this.activatedRoute.params\n      .pipe(\n        takeUntilDestroyed(),\n        switchMap(({ organizationId }) => {\n          if (this.platformUtilsService.isSelfHost()) {\n            return from(this.router.navigate([\"/settings/subscription\"]));\n          }\n\n          this.organizationId = organizationId;\n          return from(this.load());\n        }),\n      )\n      .subscribe();\n\n    const state = this.router.getCurrentNavigation()?.extras?.state;\n    // incase the above state is undefined or null we use redundantState\n    const redundantState: any = location.getState();\n    if (state && Object.prototype.hasOwnProperty.call(state, \"launchPaymentModalAutomatically\")) {\n      this.launchPaymentModalAutomatically = state.launchPaymentModalAutomatically;\n    } else if (\n      redundantState &&\n      Object.prototype.hasOwnProperty.call(redundantState, \"launchPaymentModalAutomatically\")\n    ) {\n      this.launchPaymentModalAutomatically = redundantState.launchPaymentModalAutomatically;\n    } else {\n      this.launchPaymentModalAutomatically = false;\n    }\n  }\n  ngOnDestroy(): void {\n    this.launchPaymentModalAutomatically = false;\n  }\n\n  protected addAccountCredit = async (): Promise<void> => {\n    const dialogRef = openAddCreditDialog(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n      },\n    });\n\n    const result = await lastValueFrom(dialogRef.closed);\n\n    if (result === AddCreditDialogResult.Added) {\n      await this.load();\n    }\n  };\n\n  protected load = async (): Promise<void> => {\n    this.loading = true;\n    const { accountCredit, paymentSource, subscriptionStatus } =\n      await this.billingApiService.getOrganizationPaymentMethod(this.organizationId);\n    this.accountCredit = accountCredit;\n    this.paymentSource = paymentSource;\n    this.subscriptionStatus = subscriptionStatus;\n\n    if (this.organizationId) {\n      const organizationSubscriptionPromise = this.organizationApiService.getSubscription(\n        this.organizationId,\n      );\n      const organizationPromise = this.organizationService.get(this.organizationId);\n\n      [this.organizationSubscriptionResponse, this.organization] = await Promise.all([\n        organizationSubscriptionPromise,\n        organizationPromise,\n      ]);\n      this.freeTrialData = this.trialFlowService.checkForOrgsWithUpcomingPaymentIssues(\n        this.organization,\n        this.organizationSubscriptionResponse,\n        paymentSource,\n      );\n    }\n    this.isUnpaid = this.subscriptionStatus === \"unpaid\" ?? false;\n    // If the flag `launchPaymentModalAutomatically` is set to true,\n    // we schedule a timeout (delay of 800ms) to automatically launch the payment modal.\n    // This delay ensures that any prior UI/rendering operations complete before triggering the modal.\n    if (this.launchPaymentModalAutomatically) {\n      window.setTimeout(async () => {\n        await this.changePayment();\n        this.launchPaymentModalAutomatically = false;\n        this.location.replaceState(this.location.path(), \"\", {});\n      }, 800);\n    }\n    this.loading = false;\n  };\n\n  protected updatePaymentMethod = async (): Promise<void> => {\n    const dialogRef = AdjustPaymentDialogV2Component.open(this.dialogService, {\n      data: {\n        initialPaymentMethod: this.paymentSource?.type,\n        organizationId: this.organizationId,\n        productTier: this.organization?.productTierType,\n      },\n    });\n\n    const result = await lastValueFrom(dialogRef.closed);\n\n    if (result === AdjustPaymentDialogV2ResultType.Submitted) {\n      await this.load();\n    }\n  };\n\n  changePayment = async () => {\n    const dialogRef = AdjustPaymentDialogV2Component.open(this.dialogService, {\n      data: {\n        initialPaymentMethod: this.paymentSource?.type,\n        organizationId: this.organizationId,\n        productTier: this.organization?.productTierType,\n      },\n    });\n    const result = await lastValueFrom(dialogRef.closed);\n    if (result === AdjustPaymentDialogV2ResultType.Submitted) {\n      this.location.replaceState(this.location.path(), \"\", {});\n      if (this.launchPaymentModalAutomatically && !this.organization.enabled) {\n        await this.syncService.fullSync(true);\n      }\n      this.launchPaymentModalAutomatically = false;\n      await this.load();\n    }\n  };\n\n  protected verifyBankAccount = async (request: VerifyBankAccountRequest): Promise<void> => {\n    await this.billingApiService.verifyOrganizationBankAccount(this.organizationId, request);\n    this.toastService.showToast({\n      variant: \"success\",\n      title: null,\n      message: this.i18nService.t(\"verifiedBankAccount\"),\n    });\n  };\n\n  protected get accountCreditHeaderText(): string {\n    const key = this.accountCredit <= 0 ? \"accountBalance\" : \"accountCredit\";\n    return this.i18nService.t(key);\n  }\n\n  protected get paymentSourceClasses() {\n    if (this.paymentSource == null) {\n      return [];\n    }\n    switch (this.paymentSource.type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.Check:\n        return [\"bwi-money\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n\n  protected get subscriptionIsUnpaid(): boolean {\n    return this.subscriptionStatus === \"unpaid\";\n  }\n\n  protected get updatePaymentSourceButtonText(): string {\n    const key = this.paymentSource == null ? \"addPaymentMethod\" : \"changePaymentMethod\";\n    return this.i18nService.t(key);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { featureFlaggedRoute } from \"@bitwarden/angular/platform/utils/feature-flagged-route\";\nimport { canAccessBillingTab } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { FeatureFlag } from \"@bitwarden/common/enums/feature-flag.enum\";\n\nimport { organizationPermissionsGuard } from \"../../admin-console/organizations/guards/org-permissions.guard\";\nimport { organizationIsUnmanaged } from \"../../billing/guards/organization-is-unmanaged.guard\";\nimport { WebPlatformUtilsService } from \"../../core/web-platform-utils.service\";\nimport { PaymentMethodComponent } from \"../shared\";\n\nimport { OrgBillingHistoryViewComponent } from \"./organization-billing-history-view.component\";\nimport { OrganizationSubscriptionCloudComponent } from \"./organization-subscription-cloud.component\";\nimport { OrganizationSubscriptionSelfhostComponent } from \"./organization-subscription-selfhost.component\";\nimport { OrganizationPaymentMethodComponent } from \"./payment-method/organization-payment-method.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [organizationPermissionsGuard(canAccessBillingTab)],\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"subscription\" },\n      {\n        path: \"subscription\",\n        component: WebPlatformUtilsService.isSelfHost()\n          ? OrganizationSubscriptionSelfhostComponent\n          : OrganizationSubscriptionCloudComponent,\n        data: { titleId: \"subscription\" },\n      },\n      ...featureFlaggedRoute({\n        defaultComponent: PaymentMethodComponent,\n        flaggedComponent: OrganizationPaymentMethodComponent,\n        featureFlag: FeatureFlag.AC2476_DeprecateStripeSourcesAPI,\n        routeOptions: {\n          path: \"payment-method\",\n          canActivate: [\n            organizationPermissionsGuard((org) => org.canEditPaymentMethods),\n            organizationIsUnmanaged,\n          ],\n          data: {\n            titleId: \"paymentMethod\",\n          },\n        },\n      }),\n      {\n        path: \"history\",\n        component: OrgBillingHistoryViewComponent,\n        canActivate: [\n          organizationPermissionsGuard((org) => org.canViewBillingHistory),\n          organizationIsUnmanaged,\n        ],\n        data: {\n          titleId: \"billingHistory\",\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationBillingRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BannerModule } from \"../../../../../../libs/components/src/banner/banner.module\";\nimport { UserVerificationModule } from \"../../auth/shared/components/user-verification\";\nimport { LooseComponentsModule } from \"../../shared\";\nimport { BillingSharedModule } from \"../shared\";\n\nimport { AdjustSubscription } from \"./adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\nimport { BillingSyncKeyComponent } from \"./billing-sync-key.component\";\nimport { ChangePlanComponent } from \"./change-plan.component\";\nimport { DownloadLicenceDialogComponent } from \"./download-license.component\";\nimport { OrgBillingHistoryViewComponent } from \"./organization-billing-history-view.component\";\nimport { OrganizationBillingRoutingModule } from \"./organization-billing-routing.module\";\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\nimport { OrganizationSubscriptionCloudComponent } from \"./organization-subscription-cloud.component\";\nimport { OrganizationSubscriptionSelfhostComponent } from \"./organization-subscription-selfhost.component\";\nimport { OrganizationPaymentMethodComponent } from \"./payment-method/organization-payment-method.component\";\nimport { SecretsManagerAdjustSubscriptionComponent } from \"./sm-adjust-subscription.component\";\nimport { SecretsManagerSubscribeStandaloneComponent } from \"./sm-subscribe-standalone.component\";\nimport { SubscriptionHiddenComponent } from \"./subscription-hidden.component\";\nimport { SubscriptionStatusComponent } from \"./subscription-status.component\";\n\n@NgModule({\n  imports: [\n    OrganizationBillingRoutingModule,\n    UserVerificationModule,\n    BillingSharedModule,\n    OrganizationPlansComponent,\n    LooseComponentsModule,\n    BannerModule,\n  ],\n  declarations: [\n    AdjustSubscription,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    ChangePlanComponent,\n    DownloadLicenceDialogComponent,\n    OrganizationSubscriptionCloudComponent,\n    OrganizationSubscriptionSelfhostComponent,\n    OrgBillingHistoryViewComponent,\n    SecretsManagerAdjustSubscriptionComponent,\n    SecretsManagerSubscribeStandaloneComponent,\n    SubscriptionHiddenComponent,\n    SubscriptionStatusComponent,\n    OrganizationPaymentMethodComponent,\n  ],\n})\nexport class OrganizationBillingModule {}\n"],"names":["organizationIsUnmanaged","route","organizationService","providerService","organization","get","params","organizationId","hasProvider","provider","providerId","providerStatus","Billable","load","OrgBillingHistoryViewComponent","constructor","organizationBillingApiService","loading","firstLoaded","openInvoices","paidInvoices","transactions","hasAdditionalHistory","destroy$","Subject","ngOnInit","this","pipe","concatMap","takeUntil","subscribe","ngOnDestroy","next","complete","OrganizationApiKeyRequest","type","Default","cancelRotate","rotateToken","BillingSyncApiKeyComponent","data","userVerificationService","apiService","platformUtilsService","i18nService","organizationApiService","logService","toastService","formGroup","verification","required","submit","request","buildRequest","value","then","BillingSync","showRotateScreen","response","rotateApiKey","showToast","variant","title","message","t","getOrCreateApiKey","e","error","hasBillingToken","copy","copyToClipboard","clientSecret","apiKey","keyRevisionDate","revisionDate","syncStatus","getSponsorshipSyncStatus","lastSyncDate","dayDiff","date1","date2","diffTime","Math","abs","getTime","round","submitButtonText","showLastSyncText","showAwaitingSyncText","daysBetween","Date","open","dialogService","DownloadLicenseDialogResult","DownloadLicenceDialogComponent","dialogRef","fileDownloadService","formBuilder","licenseForm","group","installationId","markAllAsTouched","license","getLicense","licenseString","JSON","stringify","download","fileName","blobData","close","Downloaded","cancel","Cancelled","config","SubscriptionHiddenIcon","OrganizationSubscriptionUpdateRequest","seatAdjustment","maxAutoscaleSeats","AdjustSubscription","internalOrganizationService","seatPrice","interval","onAdjusted","adjustSubscriptionForm","newSeatCount","min","limitSubscription","newMaxSeats","invalid","additionalSeatCount","updatePasswordManagerSeats","organizationData","isMember","isProviderUser","upsert","emit","valueChanges","maxAutoscaleSeatsControl","controls","setValidators","enable","emitEvent","disable","patchValue","currentSeatCount","limitSubscriptionChanged","maxSeatTotal","seatTotalCost","ChangePlanComponent","onChanged","onCanceled","OrganizationSmSubscriptionUpdateRequest","SecretsManagerAdjustSubscriptionComponent","monthlyServiceAccountPrice","options","additionalServiceAccountPrice","serviceAccountTotalCost","additionalServiceAccounts","seatCount","maxAdditionalServiceAccounts","maxTotalServiceAccounts","maxAutoscaleServiceAccounts","max","baseServiceAccountCount","maxServiceAccountTotalCost","maxSeatTotalCost","limitSeats","limitServiceAccounts","serviceAccountAdjustment","updateSecretsManagerSubscription","maxAutoscaleServiceAccountsControl","SecretsManagerSubscribeRequest","SecretsManagerSubscribeStandaloneComponent","onSubscribe","additionalSmSeats","plan","SecretsManager","hasAdditionalSeatsOption","userSeats","hasAdditionalServiceAccountOption","profileOrganization","subscribeToSecretsManager","id","refreshIdentityToken","SubscriptionStatusComponent","datePipe","reinstatementRequested","requestReinstatement","displayedStatus","subscription","items","some","item","sponsoredSubscriptionItem","status","planName","organizationSubscriptionResponse","name","cancelAtEndDate","defaultStatusLabel","nextChargeDateLabel","subscriptionExpiredDateLabel","cancellationDateLabel","label","date","periodEndDate","pastDueText","suspensionDate","transform","calloutBody","collectionMethod","gracePeriod","unpaidPeriodEndDate","callout","severity","header","body","showReinstatementButton","pendingCancellationText","canceledText","reinstate","changePlan","closeChangePlan","subscriptionAdjusted","cancelSubscription","manageBillingSync","downloadLicense","OrganizationSubscriptionCloudComponent","configService","billingApiService","lineItems","showChangePlan","showDownloadLicense","showAdjustSecretsManager","showSecretsManagerSubscribe","preSelectedProductTier","Free","showSubscription","showSelfHost","organizationIsManagedByConsolidatedBillingMSP","subscriptionHiddenIcon","teamsStarter","TeamsStarter","deprecateStripeSourcesAPI$","getFeatureFlag$","AC2476_DeprecateStripeSourcesAPI","reference","lastValueFrom","closed","Closed","openSimpleDialog","key","content","adjustStorage","add","firstValueFrom","A","price","storageGbPrice","cadence","billingInterval","Submitted","Adjusted","removeSponsorship","acceptButtonText","deleteRemoveSponsorship","discountPrice","productId","customerDiscount","active","appliesTo","length","includes","percentOff","snapshot","ROUTE_PARAM_ORGANIZATION_ID","showUpdatedSubscriptionStatusSection$","AC1795_UpdatedSubscriptionStatusSection","queryParams","QUERY_PARAM_UPGRADE","productTierTypeStr","queryParamMap","productTier","Number","Object","values","locale","locale$","userOrg","isIndependentOrganizationOwner","isOwner","isResoldOrganizationOwner","hasReseller","isMSPUser","metadata","getOrganizationBillingMetadata","isManaged","isEligibleForSelfHost","sub","getSubscription","map","itemTotalAmount","amount","quantity","seatPriceTotal","productName","sort","sortSubscriptionItems","reverse","apiKeyResponse","getApiKeyInformation","hasBillingSyncToken","i","keyType","canEditSubscription","useSecretsManager","cancelled","subscriptionMarkedForCancel","subscriptionLineItems","lineItem","addonSubscriptionItem","nextInvoice","upcomingInvoice","isExpired","now","storagePercentage","maxStorageGb","storageGb","toFixed","isAnnual","PasswordManager","additionalStoragePricePerGb","seats","smOptions","smSeats","maxAutoscaleSmSeats","maxAutoscaleSmServiceAccounts","smServiceAccounts","baseServiceAccount","additionalPricePerServiceAccount","canAdjustSeats","isSponsoredSubscription","subscriptionDesc","planType","toString","FamiliesAnnually","FamiliesAnnually2019","TeamsStarter2023","seatAdjustmentMessage","productTierType","isSecretsManagerTrial","calculateTotalAppliedDiscount","total","showChangePlanButton","Enterprise","canUseBillingSync","a","b","localeCompare","BillingSyncConfigApi","super","billingSyncKey","getResponseProperty","lastLicenseSyncString","lastLicenseSync","SelfHostedOrganizationSubscriptionView","expirationWithGracePeriod","expiration","expirationWithoutGracePeriod","hasSeparateGracePeriod","hasExpiration","isExpiredWithoutGracePeriod","isExpiredAndOutsideGracePeriod","isInTrial","OrganizationConnectionRequest","enabled","BillingSyncConfigRequest","BillingSyncKeyComponent","entityId","CloudBillingSync","existingConnectionId","createOrganizationConnection","updateOrganizationConnection","setParentConnection","deleteConnection","deleteOrganizationConnection","SubscriptionHiddenComponent","manageBillingSyncSelfHosted","licenseUploaded","LicenseOptions","OrganizationSubscriptionSelfhostComponent","existingBillingSyncConnection","_existingBillingSyncConnection","form","setValue","billingSyncEnabled","SYNC","UPLOAD","showAsExpired","messagingService","environmentService","licenseOptions","updateMethod","disableLicenseSyncControl","syncLicense","selfHostedSyncLicense","loadOrganizationConnection","send","cloudWebVaultUrl","cloudWebVaultUrl$","showAutomaticSyncAndManualUpload","Families","canViewSubscription","subscriptionResponse","cloudCommunicationEnabled","getCloudCommunicationsEnabled","getOrganizationConnection","connection","billingSyncSetUp","changePayment","OrganizationPaymentMethodComponent","activatedRoute","router","location","trialFlowService","syncService","isUnpaid","launchPaymentModalAutomatically","addAccountCredit","Added","accountCredit","paymentSource","subscriptionStatus","getOrganizationPaymentMethod","organizationSubscriptionPromise","organizationPromise","Promise","all","freeTrialData","checkForOrgsWithUpcomingPaymentIssues","window","setTimeout","replaceState","path","updatePaymentMethod","initialPaymentMethod","fullSync","verifyBankAccount","verifyOrganizationBankAccount","switchMap","isSelfHost","from","navigate","state","getCurrentNavigation","extras","redundantState","getState","prototype","hasOwnProperty","call","accountCreditHeaderText","paymentSourceClasses","Card","BankAccount","Check","PayPal","subscriptionIsUnpaid","updatePaymentSourceButtonText","routes","canActivate","children","pathMatch","redirectTo","component","titleId","defaultComponent","flaggedComponent","featureFlag","routeOptions","org","canEditPaymentMethods","canViewBillingHistory","OrganizationBillingRoutingModule","forChild","OrganizationBillingModule"],"sourceRoot":""}