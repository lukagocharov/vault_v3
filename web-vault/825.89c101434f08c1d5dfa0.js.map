{"version":3,"file":"825.89c101434f08c1d5dfa0.js","mappings":"sqBAAA,iBACE,+BACE,iCACE,mC,gBAKA,sCAAyB,U,iBAAsB,QACjD,2BACF,yBACF,wB,MANQ,6CAGuB,sC,yCAI/B,eACE,+BACE,SACF,QACA,+BAAyB,S,gBAAoC,QAC7D,8BACA,mCACE,mCAOE,U,iBACF,QACA,yCAAqD,gEAAS,EAAAA,WAAU,IACtE,U,iBACF,QACF,yBACF,sB,yBAlBI,uCAEuB,mDAOrB,SACA,yCADgC,YAGhC,uDAEwE,2BACxE,+D,ECRC,MAAMC,UAAiC,IAS5C,WAAAC,CACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACQC,GAERC,MAAMP,EAAQC,EAAsBC,EAAaC,EAAOC,EAAaC,GAF7D,KAAAC,uBAAAA,EAXA,KAAAE,mBAA+B,CAAC,KAAM,OAAQ,QAAS,SACvD,KAAAC,mBAAqB,mCACrB,KAAAC,cAAgB,6BAY1B,CAEM,aAAAC,CAAcC,G,yCAClBC,KAAKC,cAAgBD,KAAKP,uBAAuBS,OAAOH,EAAQI,GAAIJ,EAAQK,aACtEJ,KAAKC,cACXD,KAAKK,oBAAoBC,UACvB,UACAN,KAAKX,YAAYkB,EAAE,kBACnBP,KAAKX,YAAYkB,EAAE,+BACnB,CAAEC,QAAS,MAIbR,KAAKb,OAAOsB,SAAS,CAAC,UACxB,G,CAEM,eAAAC,CAAgBX,G,yCACpBC,KAAKW,KAAOZ,EAAQY,KACH,MAAbX,KAAKW,OAEPX,KAAKW,KAAOX,KAAKW,KAAKC,QAAQ,MAAO,MAGnCb,EAAQI,KACVH,KAAKa,kBAAoBd,EAAQI,IAG/BJ,EAAQK,QACVJ,KAAKc,iCAAmCf,EAAQK,MAEpD,G,CAEM,QAAApB,G,yCACJ,IAAI+B,EACAC,QAAsB,OAAehB,KAAKiB,gBACxB,cAAlBD,EACFD,EAAc,CACZG,MAAOlB,KAAKkB,OAEa,YAAlBF,IAGTA,EAAgB,iBAChBD,EAAc,CACZG,MAAOlB,KAAKkB,MACZJ,iCAAkCd,KAAKc,iCACvCD,kBAAmBb,KAAKa,0BAItBb,KAAKb,OAAOsB,SAAS,CAACO,GAAgB,CAC1CD,YAAaA,GAEjB,G,mCAxEW9B,GAAwB,kF,mBAAxBA,EAAwB,smBDrBrC,wBAYA,uCAqBA,e,MAjCgD,wBAY1C,6C,gBCMM,IAAc,2BAAqB,iB","sources":["webpack://@bitwarden/web-vault/./src/app/auth/emergency-access/accept/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/auth/emergency-access/accept/accept-emergency.component.ts"],"sourcesContent":["<div class=\"tw-mt-5 tw-flex tw-justify-center\" *ngIf=\"loading\">\n  <div>\n    <p class=\"tw-text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x tw-text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"tw-sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div *ngIf=\"!loading && !authed\">\n  <p bitTypography=\"body1\" class=\"tw-text-center\">\n    {{ name }}\n  </p>\n  <p bitTypography=\"body1\">{{ \"acceptEmergencyAccess\" | i18n }}</p>\n  <hr />\n  <div class=\"tw-flex tw-gap-2\">\n    <a\n      bitButton\n      buttonType=\"primary\"\n      routerLink=\"/login\"\n      [queryParams]=\"{ email: email }\"\n      [block]=\"true\"\n    >\n      {{ \"logIn\" | i18n }}\n    </a>\n    <button type=\"button\" bitButton buttonType=\"primary\" (click)=\"register()\" [block]=\"true\">\n      {{ \"createAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n","// FIXME: Update this file to be type safe and remove this and next line\n// @ts-strict-ignore\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RegisterRouteService } from \"@bitwarden/auth/common\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { I18nService } from \"@bitwarden/common/platform/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/platform/abstractions/platform-utils.service\";\n\nimport { BaseAcceptComponent } from \"../../../common/base.accept.component\";\nimport { SharedModule } from \"../../../shared\";\nimport { EmergencyAccessModule } from \"../emergency-access.module\";\nimport { EmergencyAccessService } from \"../services/emergency-access.service\";\n\n@Component({\n  standalone: true,\n  imports: [SharedModule, EmergencyAccessModule],\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n  emergencyAccessId: string;\n  acceptEmergencyAccessInviteToken: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    authService: AuthService,\n    registerRouteService: RegisterRouteService,\n    private emergencyAccessService: EmergencyAccessService,\n  ) {\n    super(router, platformUtilsService, i18nService, route, authService, registerRouteService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.emergencyAccessService.accept(qParams.id, qParams.token);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 },\n    );\n    // FIXME: Verify that this floating promise is intentional. If it is, add an explanatory comment and ensure there is proper error handling.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n\n    if (qParams.id) {\n      this.emergencyAccessId = qParams.id;\n    }\n\n    if (qParams.token) {\n      this.acceptEmergencyAccessInviteToken = qParams.token;\n    }\n  }\n\n  async register() {\n    let queryParams: Params;\n    let registerRoute = await firstValueFrom(this.registerRoute$);\n    if (registerRoute === \"/register\") {\n      queryParams = {\n        email: this.email,\n      };\n    } else if (registerRoute === \"/signup\") {\n      // We have to override the base component route as we don't need users to\n      // complete email verification if they are coming directly an emailed invite.\n      registerRoute = \"/finish-signup\";\n      queryParams = {\n        email: this.email,\n        acceptEmergencyAccessInviteToken: this.acceptEmergencyAccessInviteToken,\n        emergencyAccessId: this.emergencyAccessId,\n      };\n    }\n\n    await this.router.navigate([registerRoute], {\n      queryParams: queryParams,\n    });\n  }\n}\n"],"names":["register","AcceptEmergencyComponent","constructor","router","platformUtilsService","i18nService","route","authService","registerRouteService","emergencyAccessService","super","requiredParameters","failedShortMessage","failedMessage","authedHandler","qParams","this","actionPromise","accept","id","token","platformUtilService","showToast","t","timeout","navigate","unauthedHandler","name","replace","emergencyAccessId","acceptEmergencyAccessInviteToken","queryParams","registerRoute","registerRoute$","email"],"sourceRoot":""}